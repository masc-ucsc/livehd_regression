module random_verilog(
	input [5:0] a0,
	input [6:0] a1,
	input [7:0] a2,
	input [8:0] a3,
	input [9:0] a4,
	input [10:0] a5,
	output [50:0] y);

	wire [5:0] y0;
	wire [6:0] y1;
	wire [7:0] y2;
	wire [8:0] y3;
	wire [9:0] y4;
	wire [10:0] y5;
	assign y = {y0,y1,y2,y3,y4,y5};

	assign y0 = ({~a0[3:0] ,(~a2[3:2] )} / {(a4[7] ?~a4[7:4] :(~(^a1[2:1]) ?~a5[7:4] :~a5[7:4] )),(a4[7] ?(~a2[3:2] ):a5[6:5] )});
	assign y1 = (~a2[6:0]  << (a2[6:0]  - a2[6:0] ));
	assign y2 = (~a4[7:0]  / ~a4[7:0] );
	assign y3 = ({((~(!a0[1:1]) )?(~a4[4] ?~a2[6:0] :~a2[6:0] ):(~a1[1] ?a1[6:0] :a1[6:0] )),(~(a3[7:7]==a5[9:9]) ?{~a5[9:8] }:{a2[3:2] })} >> (((~a5[9:1] ) | (~a3[8:0] )) % ({~a3[8:0] } / (a3[8:0] ))));
	assign y4 = ((((~(a3[5:5]<a5[3:3]) )?(a4[5:4]>a0[3:2]) :(a4[5:4]>a0[3:2]) )?(((a5[9:7]<=a0[2:0]) ?a5[9:0] :a5[9:0] ) % ~a5[9:0] ):((a5[7:5]||a3[5:3]) ?a4[9:0] :(a5[9:0] ))) * {({(|a2[2:1]) }?{~a1[5:1] }:~a0[4:0] ),({(|a2[2:1]) }?{~a1[5:1] }:~a0[4:0] )});
	assign y5 = ((a5[10:0]  / (((!a0[3:0]) )?a5[10:0] :{~a5[10:0] })) / {(((&a4[7:7]) )?~a1[5:1] :(~a0[4:0] )),((|a3[8:7]) ?a0[2:0] :(a0[0] ?a3[5:3] :a3[5:3] )),((|a3[8:7]) ?a0[2:0] :(a0[0] ?a3[5:3] :a3[5:3] ))});
endmodule