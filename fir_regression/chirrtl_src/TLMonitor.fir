circuit TLMonitor :

  extmodule plusarg_reader : 
    output out : UInt<32>
    
    defname = plusarg_reader
    parameter FORMAT = "tilelink_timeout=%d"
    parameter DEFAULT = 0
    parameter WIDTH = 32

  module TLMonitor : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in : {a : {ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, mask : UInt<8>, data : UInt<64>, corrupt : UInt<1>}}, d : {ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, sink : UInt<3>, denied : UInt<1>, user : {}, echo : {}, data : UInt<64>, corrupt : UInt<1>}}}}
    
    when io.in.a.valid : @[Monitor.scala 366:27]
      node _T = leq(io.in.a.bits.opcode, UInt<3>("h07")) @[Bundles.scala 41:24]
      node _T_1 = asUInt(reset) @[Monitor.scala 44:11]
      node _T_2 = or(_T, _T_1) @[Monitor.scala 44:11]
      node _T_3 = eq(_T_2, UInt<1>("h00")) @[Monitor.scala 44:11]
      when _T_3 : @[Monitor.scala 44:11]
        printf(clock, UInt<1>(1), "Assertion failed: 'A' channel has invalid opcode (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
        stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
        skip @[Monitor.scala 44:11]
      node _T_4 = eq(io.in.a.bits.source, UInt<1>("h00")) @[Parameters.scala 47:9]
      wire _T_5 : UInt<1>[1] @[Parameters.scala 923:27]
      _T_5 is invalid @[Parameters.scala 923:27]
      _T_5[0] <= _T_4 @[Parameters.scala 923:27]
      node _T_6 = asUInt(asSInt(UInt<12>("h0fff"))) @[package.scala 189:70]
      node _T_7 = dshl(_T_6, io.in.a.bits.size) @[package.scala 189:77]
      node _T_8 = bits(_T_7, 11, 0) @[package.scala 189:82]
      node _T_9 = not(_T_8) @[package.scala 189:46]
      node _T_10 = and(io.in.a.bits.address, _T_9) @[Edges.scala 22:16]
      node _T_11 = eq(_T_10, UInt<1>("h00")) @[Edges.scala 22:24]
      node _T_12 = or(io.in.a.bits.size, UInt<3>("h00")) @[Misc.scala 201:34]
      node _T_13 = bits(_T_12, 1, 0) @[OneHot.scala 64:49]
      node _T_14 = dshl(UInt<1>("h01"), _T_13) @[OneHot.scala 65:12]
      node _T_15 = bits(_T_14, 2, 0) @[OneHot.scala 65:27]
      node _T_16 = or(_T_15, UInt<1>("h01")) @[Misc.scala 201:81]
      node _T_17 = geq(io.in.a.bits.size, UInt<2>("h03")) @[Misc.scala 205:21]
      node _T_18 = bits(_T_16, 2, 2) @[Misc.scala 208:26]
      node _T_19 = bits(io.in.a.bits.address, 2, 2) @[Misc.scala 209:26]
      node _T_20 = eq(_T_19, UInt<1>("h00")) @[Misc.scala 210:20]
      node _T_21 = and(UInt<1>("h01"), _T_20) @[Misc.scala 213:27]
      node _T_22 = and(_T_18, _T_21) @[Misc.scala 214:38]
      node _T_23 = or(_T_17, _T_22) @[Misc.scala 214:29]
      node _T_24 = and(UInt<1>("h01"), _T_19) @[Misc.scala 213:27]
      node _T_25 = and(_T_18, _T_24) @[Misc.scala 214:38]
      node _T_26 = or(_T_17, _T_25) @[Misc.scala 214:29]
      node _T_27 = bits(_T_16, 1, 1) @[Misc.scala 208:26]
      node _T_28 = bits(io.in.a.bits.address, 1, 1) @[Misc.scala 209:26]
      node _T_29 = eq(_T_28, UInt<1>("h00")) @[Misc.scala 210:20]
      node _T_30 = and(_T_21, _T_29) @[Misc.scala 213:27]
      node _T_31 = and(_T_27, _T_30) @[Misc.scala 214:38]
      node _T_32 = or(_T_23, _T_31) @[Misc.scala 214:29]
      node _T_33 = and(_T_21, _T_28) @[Misc.scala 213:27]
      node _T_34 = and(_T_27, _T_33) @[Misc.scala 214:38]
      node _T_35 = or(_T_23, _T_34) @[Misc.scala 214:29]
      node _T_36 = and(_T_24, _T_29) @[Misc.scala 213:27]
      node _T_37 = and(_T_27, _T_36) @[Misc.scala 214:38]
      node _T_38 = or(_T_26, _T_37) @[Misc.scala 214:29]
      node _T_39 = and(_T_24, _T_28) @[Misc.scala 213:27]
      node _T_40 = and(_T_27, _T_39) @[Misc.scala 214:38]
      node _T_41 = or(_T_26, _T_40) @[Misc.scala 214:29]
      node _T_42 = bits(_T_16, 0, 0) @[Misc.scala 208:26]
      node _T_43 = bits(io.in.a.bits.address, 0, 0) @[Misc.scala 209:26]
      node _T_44 = eq(_T_43, UInt<1>("h00")) @[Misc.scala 210:20]
      node _T_45 = and(_T_30, _T_44) @[Misc.scala 213:27]
      node _T_46 = and(_T_42, _T_45) @[Misc.scala 214:38]
      node _T_47 = or(_T_32, _T_46) @[Misc.scala 214:29]
      node _T_48 = and(_T_30, _T_43) @[Misc.scala 213:27]
      node _T_49 = and(_T_42, _T_48) @[Misc.scala 214:38]
      node _T_50 = or(_T_32, _T_49) @[Misc.scala 214:29]
      node _T_51 = and(_T_33, _T_44) @[Misc.scala 213:27]
      node _T_52 = and(_T_42, _T_51) @[Misc.scala 214:38]
      node _T_53 = or(_T_35, _T_52) @[Misc.scala 214:29]
      node _T_54 = and(_T_33, _T_43) @[Misc.scala 213:27]
      node _T_55 = and(_T_42, _T_54) @[Misc.scala 214:38]
      node _T_56 = or(_T_35, _T_55) @[Misc.scala 214:29]
      node _T_57 = and(_T_36, _T_44) @[Misc.scala 213:27]
      node _T_58 = and(_T_42, _T_57) @[Misc.scala 214:38]
      node _T_59 = or(_T_38, _T_58) @[Misc.scala 214:29]
      node _T_60 = and(_T_36, _T_43) @[Misc.scala 213:27]
      node _T_61 = and(_T_42, _T_60) @[Misc.scala 214:38]
      node _T_62 = or(_T_38, _T_61) @[Misc.scala 214:29]
      node _T_63 = and(_T_39, _T_44) @[Misc.scala 213:27]
      node _T_64 = and(_T_42, _T_63) @[Misc.scala 214:38]
      node _T_65 = or(_T_41, _T_64) @[Misc.scala 214:29]
      node _T_66 = and(_T_39, _T_43) @[Misc.scala 213:27]
      node _T_67 = and(_T_42, _T_66) @[Misc.scala 214:38]
      node _T_68 = or(_T_41, _T_67) @[Misc.scala 214:29]
      node _T_69 = cat(_T_50, _T_47) @[Cat.scala 29:58]
      node _T_70 = cat(_T_56, _T_53) @[Cat.scala 29:58]
      node _T_71 = cat(_T_70, _T_69) @[Cat.scala 29:58]
      node _T_72 = cat(_T_62, _T_59) @[Cat.scala 29:58]
      node _T_73 = cat(_T_68, _T_65) @[Cat.scala 29:58]
      node _T_74 = cat(_T_73, _T_72) @[Cat.scala 29:58]
      node _T_75 = cat(_T_74, _T_71) @[Cat.scala 29:58]
      node _T_76 = eq(io.in.a.bits.source, UInt<1>("h00")) @[Parameters.scala 47:9]
      node _T_77 = eq(_T_76, UInt<1>("h00")) @[Monitor.scala 65:7]
      node _T_78 = xor(io.in.a.bits.address, UInt<1>("h00")) @[Parameters.scala 137:31]
      node _T_79 = cvt(_T_78) @[Parameters.scala 137:49]
      node _T_80 = and(_T_79, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:52]
      node _T_81 = asSInt(_T_80) @[Parameters.scala 137:52]
      node _T_82 = eq(_T_81, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
      node _T_83 = or(_T_77, _T_82) @[Monitor.scala 65:36]
      node _T_84 = asUInt(reset) @[Monitor.scala 44:11]
      node _T_85 = or(_T_83, _T_84) @[Monitor.scala 44:11]
      node _T_86 = eq(_T_85, UInt<1>("h00")) @[Monitor.scala 44:11]
      when _T_86 : @[Monitor.scala 44:11]
        printf(clock, UInt<1>(1), "Assertion failed: 'A' channel carries an address illegal for the specified bank visibility\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
        stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
        skip @[Monitor.scala 44:11]
      node _T_87 = eq(io.in.a.bits.opcode, UInt<3>("h06")) @[Monitor.scala 79:25]
      when _T_87 : @[Monitor.scala 79:54]
        node _T_88 = or(UInt<1>("h00"), UInt<1>("h00")) @[Parameters.scala 551:31]
        node _T_89 = xor(io.in.a.bits.address, UInt<14>("h03000")) @[Parameters.scala 137:31]
        node _T_90 = cvt(_T_89) @[Parameters.scala 137:49]
        node _T_91 = and(_T_90, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
        node _T_92 = asSInt(_T_91) @[Parameters.scala 137:52]
        node _T_93 = eq(_T_92, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_94 = xor(io.in.a.bits.address, UInt<26>("h02010000")) @[Parameters.scala 137:31]
        node _T_95 = cvt(_T_94) @[Parameters.scala 137:49]
        node _T_96 = and(_T_95, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
        node _T_97 = asSInt(_T_96) @[Parameters.scala 137:52]
        node _T_98 = eq(_T_97, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_99 = xor(io.in.a.bits.address, UInt<31>("h054000000")) @[Parameters.scala 137:31]
        node _T_100 = cvt(_T_99) @[Parameters.scala 137:49]
        node _T_101 = and(_T_100, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
        node _T_102 = asSInt(_T_101) @[Parameters.scala 137:52]
        node _T_103 = eq(_T_102, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_104 = xor(io.in.a.bits.address, UInt<28>("h0c000000")) @[Parameters.scala 137:31]
        node _T_105 = cvt(_T_104) @[Parameters.scala 137:49]
        node _T_106 = and(_T_105, asSInt(UInt<27>("h04000000"))) @[Parameters.scala 137:52]
        node _T_107 = asSInt(_T_106) @[Parameters.scala 137:52]
        node _T_108 = eq(_T_107, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_109 = xor(io.in.a.bits.address, UInt<26>("h02000000")) @[Parameters.scala 137:31]
        node _T_110 = cvt(_T_109) @[Parameters.scala 137:49]
        node _T_111 = and(_T_110, asSInt(UInt<17>("h010000"))) @[Parameters.scala 137:52]
        node _T_112 = asSInt(_T_111) @[Parameters.scala 137:52]
        node _T_113 = eq(_T_112, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_114 = xor(io.in.a.bits.address, UInt<1>("h00")) @[Parameters.scala 137:31]
        node _T_115 = cvt(_T_114) @[Parameters.scala 137:49]
        node _T_116 = and(_T_115, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
        node _T_117 = asSInt(_T_116) @[Parameters.scala 137:52]
        node _T_118 = eq(_T_117, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_119 = xor(io.in.a.bits.address, UInt<17>("h010000")) @[Parameters.scala 137:31]
        node _T_120 = cvt(_T_119) @[Parameters.scala 137:49]
        node _T_121 = and(_T_120, asSInt(UInt<17>("h010000"))) @[Parameters.scala 137:52]
        node _T_122 = asSInt(_T_121) @[Parameters.scala 137:52]
        node _T_123 = eq(_T_122, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_124 = or(_T_93, _T_98) @[Parameters.scala 552:42]
        node _T_125 = or(_T_124, _T_103) @[Parameters.scala 552:42]
        node _T_126 = or(_T_125, _T_108) @[Parameters.scala 552:42]
        node _T_127 = or(_T_126, _T_113) @[Parameters.scala 552:42]
        node _T_128 = or(_T_127, _T_118) @[Parameters.scala 552:42]
        node _T_129 = or(_T_128, _T_123) @[Parameters.scala 552:42]
        node _T_130 = and(_T_88, _T_129) @[Parameters.scala 551:56]
        node _T_131 = eq(UInt<3>("h06"), io.in.a.bits.size) @[Parameters.scala 92:48]
        node _T_132 = or(UInt<1>("h00"), _T_131) @[Parameters.scala 551:31]
        node _T_133 = xor(io.in.a.bits.address, UInt<32>("h080000000")) @[Parameters.scala 137:31]
        node _T_134 = cvt(_T_133) @[Parameters.scala 137:49]
        node _T_135 = and(_T_134, asSInt(UInt<29>("h010000000"))) @[Parameters.scala 137:52]
        node _T_136 = asSInt(_T_135) @[Parameters.scala 137:52]
        node _T_137 = eq(_T_136, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_138 = and(_T_132, _T_137) @[Parameters.scala 551:56]
        node _T_139 = or(UInt<1>("h00"), _T_130) @[Parameters.scala 553:30]
        node _T_140 = or(_T_139, _T_138) @[Parameters.scala 553:30]
        node _T_141 = asUInt(reset) @[Monitor.scala 44:11]
        node _T_142 = or(_T_140, _T_141) @[Monitor.scala 44:11]
        node _T_143 = eq(_T_142, UInt<1>("h00")) @[Monitor.scala 44:11]
        when _T_143 : @[Monitor.scala 44:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel carries AcquireBlock type unsupported by manager (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
          skip @[Monitor.scala 44:11]
        node _T_144 = asUInt(reset) @[Monitor.scala 44:11]
        node _T_145 = or(UInt<1>("h00"), _T_144) @[Monitor.scala 44:11]
        node _T_146 = eq(_T_145, UInt<1>("h00")) @[Monitor.scala 44:11]
        when _T_146 : @[Monitor.scala 44:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel carries AcquireBlock from a client which does not support Probe (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
          skip @[Monitor.scala 44:11]
        node _T_147 = asUInt(reset) @[Monitor.scala 44:11]
        node _T_148 = or(_T_5[0], _T_147) @[Monitor.scala 44:11]
        node _T_149 = eq(_T_148, UInt<1>("h00")) @[Monitor.scala 44:11]
        when _T_149 : @[Monitor.scala 44:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel AcquireBlock carries invalid source ID (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
          skip @[Monitor.scala 44:11]
        node _T_150 = geq(io.in.a.bits.size, UInt<2>("h03")) @[Monitor.scala 83:30]
        node _T_151 = asUInt(reset) @[Monitor.scala 44:11]
        node _T_152 = or(_T_150, _T_151) @[Monitor.scala 44:11]
        node _T_153 = eq(_T_152, UInt<1>("h00")) @[Monitor.scala 44:11]
        when _T_153 : @[Monitor.scala 44:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel AcquireBlock smaller than a beat (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
          skip @[Monitor.scala 44:11]
        node _T_154 = asUInt(reset) @[Monitor.scala 44:11]
        node _T_155 = or(_T_11, _T_154) @[Monitor.scala 44:11]
        node _T_156 = eq(_T_155, UInt<1>("h00")) @[Monitor.scala 44:11]
        when _T_156 : @[Monitor.scala 44:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel AcquireBlock address not aligned to size (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
          skip @[Monitor.scala 44:11]
        node _T_157 = leq(io.in.a.bits.param, UInt<2>("h02")) @[Bundles.scala 110:27]
        node _T_158 = asUInt(reset) @[Monitor.scala 44:11]
        node _T_159 = or(_T_157, _T_158) @[Monitor.scala 44:11]
        node _T_160 = eq(_T_159, UInt<1>("h00")) @[Monitor.scala 44:11]
        when _T_160 : @[Monitor.scala 44:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel AcquireBlock carries invalid grow param (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
          skip @[Monitor.scala 44:11]
        node _T_161 = not(io.in.a.bits.mask) @[Monitor.scala 86:18]
        node _T_162 = eq(_T_161, UInt<1>("h00")) @[Monitor.scala 86:31]
        node _T_163 = asUInt(reset) @[Monitor.scala 44:11]
        node _T_164 = or(_T_162, _T_163) @[Monitor.scala 44:11]
        node _T_165 = eq(_T_164, UInt<1>("h00")) @[Monitor.scala 44:11]
        when _T_165 : @[Monitor.scala 44:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel AcquireBlock contains invalid mask (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
          skip @[Monitor.scala 44:11]
        node _T_166 = eq(io.in.a.bits.corrupt, UInt<1>("h00")) @[Monitor.scala 87:18]
        node _T_167 = asUInt(reset) @[Monitor.scala 44:11]
        node _T_168 = or(_T_166, _T_167) @[Monitor.scala 44:11]
        node _T_169 = eq(_T_168, UInt<1>("h00")) @[Monitor.scala 44:11]
        when _T_169 : @[Monitor.scala 44:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel AcquireBlock is corrupt (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
          skip @[Monitor.scala 44:11]
        skip @[Monitor.scala 79:54]
      node _T_170 = eq(io.in.a.bits.opcode, UInt<3>("h07")) @[Monitor.scala 90:25]
      when _T_170 : @[Monitor.scala 90:53]
        node _T_171 = or(UInt<1>("h00"), UInt<1>("h00")) @[Parameters.scala 551:31]
        node _T_172 = xor(io.in.a.bits.address, UInt<14>("h03000")) @[Parameters.scala 137:31]
        node _T_173 = cvt(_T_172) @[Parameters.scala 137:49]
        node _T_174 = and(_T_173, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
        node _T_175 = asSInt(_T_174) @[Parameters.scala 137:52]
        node _T_176 = eq(_T_175, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_177 = xor(io.in.a.bits.address, UInt<26>("h02010000")) @[Parameters.scala 137:31]
        node _T_178 = cvt(_T_177) @[Parameters.scala 137:49]
        node _T_179 = and(_T_178, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
        node _T_180 = asSInt(_T_179) @[Parameters.scala 137:52]
        node _T_181 = eq(_T_180, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_182 = xor(io.in.a.bits.address, UInt<31>("h054000000")) @[Parameters.scala 137:31]
        node _T_183 = cvt(_T_182) @[Parameters.scala 137:49]
        node _T_184 = and(_T_183, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
        node _T_185 = asSInt(_T_184) @[Parameters.scala 137:52]
        node _T_186 = eq(_T_185, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_187 = xor(io.in.a.bits.address, UInt<28>("h0c000000")) @[Parameters.scala 137:31]
        node _T_188 = cvt(_T_187) @[Parameters.scala 137:49]
        node _T_189 = and(_T_188, asSInt(UInt<27>("h04000000"))) @[Parameters.scala 137:52]
        node _T_190 = asSInt(_T_189) @[Parameters.scala 137:52]
        node _T_191 = eq(_T_190, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_192 = xor(io.in.a.bits.address, UInt<26>("h02000000")) @[Parameters.scala 137:31]
        node _T_193 = cvt(_T_192) @[Parameters.scala 137:49]
        node _T_194 = and(_T_193, asSInt(UInt<17>("h010000"))) @[Parameters.scala 137:52]
        node _T_195 = asSInt(_T_194) @[Parameters.scala 137:52]
        node _T_196 = eq(_T_195, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_197 = xor(io.in.a.bits.address, UInt<1>("h00")) @[Parameters.scala 137:31]
        node _T_198 = cvt(_T_197) @[Parameters.scala 137:49]
        node _T_199 = and(_T_198, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
        node _T_200 = asSInt(_T_199) @[Parameters.scala 137:52]
        node _T_201 = eq(_T_200, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_202 = xor(io.in.a.bits.address, UInt<17>("h010000")) @[Parameters.scala 137:31]
        node _T_203 = cvt(_T_202) @[Parameters.scala 137:49]
        node _T_204 = and(_T_203, asSInt(UInt<17>("h010000"))) @[Parameters.scala 137:52]
        node _T_205 = asSInt(_T_204) @[Parameters.scala 137:52]
        node _T_206 = eq(_T_205, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_207 = or(_T_176, _T_181) @[Parameters.scala 552:42]
        node _T_208 = or(_T_207, _T_186) @[Parameters.scala 552:42]
        node _T_209 = or(_T_208, _T_191) @[Parameters.scala 552:42]
        node _T_210 = or(_T_209, _T_196) @[Parameters.scala 552:42]
        node _T_211 = or(_T_210, _T_201) @[Parameters.scala 552:42]
        node _T_212 = or(_T_211, _T_206) @[Parameters.scala 552:42]
        node _T_213 = and(_T_171, _T_212) @[Parameters.scala 551:56]
        node _T_214 = eq(UInt<3>("h06"), io.in.a.bits.size) @[Parameters.scala 92:48]
        node _T_215 = or(UInt<1>("h00"), _T_214) @[Parameters.scala 551:31]
        node _T_216 = xor(io.in.a.bits.address, UInt<32>("h080000000")) @[Parameters.scala 137:31]
        node _T_217 = cvt(_T_216) @[Parameters.scala 137:49]
        node _T_218 = and(_T_217, asSInt(UInt<29>("h010000000"))) @[Parameters.scala 137:52]
        node _T_219 = asSInt(_T_218) @[Parameters.scala 137:52]
        node _T_220 = eq(_T_219, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_221 = and(_T_215, _T_220) @[Parameters.scala 551:56]
        node _T_222 = or(UInt<1>("h00"), _T_213) @[Parameters.scala 553:30]
        node _T_223 = or(_T_222, _T_221) @[Parameters.scala 553:30]
        node _T_224 = asUInt(reset) @[Monitor.scala 44:11]
        node _T_225 = or(_T_223, _T_224) @[Monitor.scala 44:11]
        node _T_226 = eq(_T_225, UInt<1>("h00")) @[Monitor.scala 44:11]
        when _T_226 : @[Monitor.scala 44:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel carries AcquirePerm type unsupported by manager (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
          skip @[Monitor.scala 44:11]
        node _T_227 = asUInt(reset) @[Monitor.scala 44:11]
        node _T_228 = or(UInt<1>("h00"), _T_227) @[Monitor.scala 44:11]
        node _T_229 = eq(_T_228, UInt<1>("h00")) @[Monitor.scala 44:11]
        when _T_229 : @[Monitor.scala 44:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel carries AcquirePerm from a client which does not support Probe (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
          skip @[Monitor.scala 44:11]
        node _T_230 = asUInt(reset) @[Monitor.scala 44:11]
        node _T_231 = or(_T_5[0], _T_230) @[Monitor.scala 44:11]
        node _T_232 = eq(_T_231, UInt<1>("h00")) @[Monitor.scala 44:11]
        when _T_232 : @[Monitor.scala 44:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel AcquirePerm carries invalid source ID (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
          skip @[Monitor.scala 44:11]
        node _T_233 = geq(io.in.a.bits.size, UInt<2>("h03")) @[Monitor.scala 94:30]
        node _T_234 = asUInt(reset) @[Monitor.scala 44:11]
        node _T_235 = or(_T_233, _T_234) @[Monitor.scala 44:11]
        node _T_236 = eq(_T_235, UInt<1>("h00")) @[Monitor.scala 44:11]
        when _T_236 : @[Monitor.scala 44:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel AcquirePerm smaller than a beat (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
          skip @[Monitor.scala 44:11]
        node _T_237 = asUInt(reset) @[Monitor.scala 44:11]
        node _T_238 = or(_T_11, _T_237) @[Monitor.scala 44:11]
        node _T_239 = eq(_T_238, UInt<1>("h00")) @[Monitor.scala 44:11]
        when _T_239 : @[Monitor.scala 44:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel AcquirePerm address not aligned to size (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
          skip @[Monitor.scala 44:11]
        node _T_240 = leq(io.in.a.bits.param, UInt<2>("h02")) @[Bundles.scala 110:27]
        node _T_241 = asUInt(reset) @[Monitor.scala 44:11]
        node _T_242 = or(_T_240, _T_241) @[Monitor.scala 44:11]
        node _T_243 = eq(_T_242, UInt<1>("h00")) @[Monitor.scala 44:11]
        when _T_243 : @[Monitor.scala 44:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel AcquirePerm carries invalid grow param (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
          skip @[Monitor.scala 44:11]
        node _T_244 = neq(io.in.a.bits.param, UInt<2>("h00")) @[Monitor.scala 97:31]
        node _T_245 = asUInt(reset) @[Monitor.scala 44:11]
        node _T_246 = or(_T_244, _T_245) @[Monitor.scala 44:11]
        node _T_247 = eq(_T_246, UInt<1>("h00")) @[Monitor.scala 44:11]
        when _T_247 : @[Monitor.scala 44:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel AcquirePerm requests NtoB (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
          skip @[Monitor.scala 44:11]
        node _T_248 = not(io.in.a.bits.mask) @[Monitor.scala 98:18]
        node _T_249 = eq(_T_248, UInt<1>("h00")) @[Monitor.scala 98:31]
        node _T_250 = asUInt(reset) @[Monitor.scala 44:11]
        node _T_251 = or(_T_249, _T_250) @[Monitor.scala 44:11]
        node _T_252 = eq(_T_251, UInt<1>("h00")) @[Monitor.scala 44:11]
        when _T_252 : @[Monitor.scala 44:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel AcquirePerm contains invalid mask (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
          skip @[Monitor.scala 44:11]
        node _T_253 = eq(io.in.a.bits.corrupt, UInt<1>("h00")) @[Monitor.scala 99:18]
        node _T_254 = asUInt(reset) @[Monitor.scala 44:11]
        node _T_255 = or(_T_253, _T_254) @[Monitor.scala 44:11]
        node _T_256 = eq(_T_255, UInt<1>("h00")) @[Monitor.scala 44:11]
        when _T_256 : @[Monitor.scala 44:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel AcquirePerm is corrupt (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
          skip @[Monitor.scala 44:11]
        skip @[Monitor.scala 90:53]
      node _T_257 = eq(io.in.a.bits.opcode, UInt<3>("h04")) @[Monitor.scala 102:25]
      when _T_257 : @[Monitor.scala 102:45]
        node _T_258 = leq(UInt<1>("h00"), io.in.a.bits.size) @[Parameters.scala 93:32]
        node _T_259 = leq(io.in.a.bits.size, UInt<4>("h0c")) @[Parameters.scala 93:42]
        node _T_260 = and(_T_258, _T_259) @[Parameters.scala 93:37]
        node _T_261 = or(UInt<1>("h00"), _T_260) @[Parameters.scala 551:31]
        node _T_262 = xor(io.in.a.bits.address, UInt<14>("h03000")) @[Parameters.scala 137:31]
        node _T_263 = cvt(_T_262) @[Parameters.scala 137:49]
        node _T_264 = and(_T_263, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
        node _T_265 = asSInt(_T_264) @[Parameters.scala 137:52]
        node _T_266 = eq(_T_265, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_267 = and(_T_261, _T_266) @[Parameters.scala 551:56]
        node _T_268 = leq(UInt<1>("h00"), io.in.a.bits.size) @[Parameters.scala 93:32]
        node _T_269 = leq(io.in.a.bits.size, UInt<3>("h06")) @[Parameters.scala 93:42]
        node _T_270 = and(_T_268, _T_269) @[Parameters.scala 93:37]
        node _T_271 = or(UInt<1>("h00"), _T_270) @[Parameters.scala 551:31]
        node _T_272 = xor(io.in.a.bits.address, UInt<26>("h02010000")) @[Parameters.scala 137:31]
        node _T_273 = cvt(_T_272) @[Parameters.scala 137:49]
        node _T_274 = and(_T_273, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
        node _T_275 = asSInt(_T_274) @[Parameters.scala 137:52]
        node _T_276 = eq(_T_275, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_277 = xor(io.in.a.bits.address, UInt<31>("h054000000")) @[Parameters.scala 137:31]
        node _T_278 = cvt(_T_277) @[Parameters.scala 137:49]
        node _T_279 = and(_T_278, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
        node _T_280 = asSInt(_T_279) @[Parameters.scala 137:52]
        node _T_281 = eq(_T_280, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_282 = xor(io.in.a.bits.address, UInt<28>("h0c000000")) @[Parameters.scala 137:31]
        node _T_283 = cvt(_T_282) @[Parameters.scala 137:49]
        node _T_284 = and(_T_283, asSInt(UInt<27>("h04000000"))) @[Parameters.scala 137:52]
        node _T_285 = asSInt(_T_284) @[Parameters.scala 137:52]
        node _T_286 = eq(_T_285, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_287 = xor(io.in.a.bits.address, UInt<26>("h02000000")) @[Parameters.scala 137:31]
        node _T_288 = cvt(_T_287) @[Parameters.scala 137:49]
        node _T_289 = and(_T_288, asSInt(UInt<17>("h010000"))) @[Parameters.scala 137:52]
        node _T_290 = asSInt(_T_289) @[Parameters.scala 137:52]
        node _T_291 = eq(_T_290, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_292 = xor(io.in.a.bits.address, UInt<1>("h00")) @[Parameters.scala 137:31]
        node _T_293 = cvt(_T_292) @[Parameters.scala 137:49]
        node _T_294 = and(_T_293, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
        node _T_295 = asSInt(_T_294) @[Parameters.scala 137:52]
        node _T_296 = eq(_T_295, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_297 = xor(io.in.a.bits.address, UInt<17>("h010000")) @[Parameters.scala 137:31]
        node _T_298 = cvt(_T_297) @[Parameters.scala 137:49]
        node _T_299 = and(_T_298, asSInt(UInt<17>("h010000"))) @[Parameters.scala 137:52]
        node _T_300 = asSInt(_T_299) @[Parameters.scala 137:52]
        node _T_301 = eq(_T_300, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_302 = xor(io.in.a.bits.address, UInt<32>("h080000000")) @[Parameters.scala 137:31]
        node _T_303 = cvt(_T_302) @[Parameters.scala 137:49]
        node _T_304 = and(_T_303, asSInt(UInt<29>("h010000000"))) @[Parameters.scala 137:52]
        node _T_305 = asSInt(_T_304) @[Parameters.scala 137:52]
        node _T_306 = eq(_T_305, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_307 = or(_T_276, _T_281) @[Parameters.scala 552:42]
        node _T_308 = or(_T_307, _T_286) @[Parameters.scala 552:42]
        node _T_309 = or(_T_308, _T_291) @[Parameters.scala 552:42]
        node _T_310 = or(_T_309, _T_296) @[Parameters.scala 552:42]
        node _T_311 = or(_T_310, _T_301) @[Parameters.scala 552:42]
        node _T_312 = or(_T_311, _T_306) @[Parameters.scala 552:42]
        node _T_313 = and(_T_271, _T_312) @[Parameters.scala 551:56]
        node _T_314 = or(UInt<1>("h00"), _T_267) @[Parameters.scala 553:30]
        node _T_315 = or(_T_314, _T_313) @[Parameters.scala 553:30]
        node _T_316 = asUInt(reset) @[Monitor.scala 44:11]
        node _T_317 = or(_T_315, _T_316) @[Monitor.scala 44:11]
        node _T_318 = eq(_T_317, UInt<1>("h00")) @[Monitor.scala 44:11]
        when _T_318 : @[Monitor.scala 44:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel carries Get type unsupported by manager (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
          skip @[Monitor.scala 44:11]
        node _T_319 = asUInt(reset) @[Monitor.scala 44:11]
        node _T_320 = or(_T_5[0], _T_319) @[Monitor.scala 44:11]
        node _T_321 = eq(_T_320, UInt<1>("h00")) @[Monitor.scala 44:11]
        when _T_321 : @[Monitor.scala 44:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel Get carries invalid source ID (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
          skip @[Monitor.scala 44:11]
        node _T_322 = asUInt(reset) @[Monitor.scala 44:11]
        node _T_323 = or(_T_11, _T_322) @[Monitor.scala 44:11]
        node _T_324 = eq(_T_323, UInt<1>("h00")) @[Monitor.scala 44:11]
        when _T_324 : @[Monitor.scala 44:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel Get address not aligned to size (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
          skip @[Monitor.scala 44:11]
        node _T_325 = eq(io.in.a.bits.param, UInt<1>("h00")) @[Monitor.scala 106:31]
        node _T_326 = asUInt(reset) @[Monitor.scala 44:11]
        node _T_327 = or(_T_325, _T_326) @[Monitor.scala 44:11]
        node _T_328 = eq(_T_327, UInt<1>("h00")) @[Monitor.scala 44:11]
        when _T_328 : @[Monitor.scala 44:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel Get carries invalid param (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
          skip @[Monitor.scala 44:11]
        node _T_329 = eq(io.in.a.bits.mask, _T_75) @[Monitor.scala 107:30]
        node _T_330 = asUInt(reset) @[Monitor.scala 44:11]
        node _T_331 = or(_T_329, _T_330) @[Monitor.scala 44:11]
        node _T_332 = eq(_T_331, UInt<1>("h00")) @[Monitor.scala 44:11]
        when _T_332 : @[Monitor.scala 44:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel Get contains invalid mask (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
          skip @[Monitor.scala 44:11]
        node _T_333 = eq(io.in.a.bits.corrupt, UInt<1>("h00")) @[Monitor.scala 108:18]
        node _T_334 = asUInt(reset) @[Monitor.scala 44:11]
        node _T_335 = or(_T_333, _T_334) @[Monitor.scala 44:11]
        node _T_336 = eq(_T_335, UInt<1>("h00")) @[Monitor.scala 44:11]
        when _T_336 : @[Monitor.scala 44:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel Get is corrupt (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
          skip @[Monitor.scala 44:11]
        skip @[Monitor.scala 102:45]
      node _T_337 = eq(io.in.a.bits.opcode, UInt<1>("h00")) @[Monitor.scala 111:25]
      when _T_337 : @[Monitor.scala 111:53]
        node _T_338 = leq(UInt<1>("h00"), io.in.a.bits.size) @[Parameters.scala 93:32]
        node _T_339 = leq(io.in.a.bits.size, UInt<4>("h0c")) @[Parameters.scala 93:42]
        node _T_340 = and(_T_338, _T_339) @[Parameters.scala 93:37]
        node _T_341 = or(UInt<1>("h00"), _T_340) @[Parameters.scala 551:31]
        node _T_342 = xor(io.in.a.bits.address, UInt<14>("h03000")) @[Parameters.scala 137:31]
        node _T_343 = cvt(_T_342) @[Parameters.scala 137:49]
        node _T_344 = and(_T_343, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
        node _T_345 = asSInt(_T_344) @[Parameters.scala 137:52]
        node _T_346 = eq(_T_345, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_347 = and(_T_341, _T_346) @[Parameters.scala 551:56]
        node _T_348 = leq(UInt<1>("h00"), io.in.a.bits.size) @[Parameters.scala 93:32]
        node _T_349 = leq(io.in.a.bits.size, UInt<3>("h06")) @[Parameters.scala 93:42]
        node _T_350 = and(_T_348, _T_349) @[Parameters.scala 93:37]
        node _T_351 = or(UInt<1>("h00"), _T_350) @[Parameters.scala 551:31]
        node _T_352 = xor(io.in.a.bits.address, UInt<26>("h02010000")) @[Parameters.scala 137:31]
        node _T_353 = cvt(_T_352) @[Parameters.scala 137:49]
        node _T_354 = and(_T_353, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
        node _T_355 = asSInt(_T_354) @[Parameters.scala 137:52]
        node _T_356 = eq(_T_355, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_357 = xor(io.in.a.bits.address, UInt<31>("h054000000")) @[Parameters.scala 137:31]
        node _T_358 = cvt(_T_357) @[Parameters.scala 137:49]
        node _T_359 = and(_T_358, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
        node _T_360 = asSInt(_T_359) @[Parameters.scala 137:52]
        node _T_361 = eq(_T_360, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_362 = xor(io.in.a.bits.address, UInt<28>("h0c000000")) @[Parameters.scala 137:31]
        node _T_363 = cvt(_T_362) @[Parameters.scala 137:49]
        node _T_364 = and(_T_363, asSInt(UInt<27>("h04000000"))) @[Parameters.scala 137:52]
        node _T_365 = asSInt(_T_364) @[Parameters.scala 137:52]
        node _T_366 = eq(_T_365, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_367 = xor(io.in.a.bits.address, UInt<26>("h02000000")) @[Parameters.scala 137:31]
        node _T_368 = cvt(_T_367) @[Parameters.scala 137:49]
        node _T_369 = and(_T_368, asSInt(UInt<17>("h010000"))) @[Parameters.scala 137:52]
        node _T_370 = asSInt(_T_369) @[Parameters.scala 137:52]
        node _T_371 = eq(_T_370, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_372 = xor(io.in.a.bits.address, UInt<1>("h00")) @[Parameters.scala 137:31]
        node _T_373 = cvt(_T_372) @[Parameters.scala 137:49]
        node _T_374 = and(_T_373, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
        node _T_375 = asSInt(_T_374) @[Parameters.scala 137:52]
        node _T_376 = eq(_T_375, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_377 = xor(io.in.a.bits.address, UInt<32>("h080000000")) @[Parameters.scala 137:31]
        node _T_378 = cvt(_T_377) @[Parameters.scala 137:49]
        node _T_379 = and(_T_378, asSInt(UInt<29>("h010000000"))) @[Parameters.scala 137:52]
        node _T_380 = asSInt(_T_379) @[Parameters.scala 137:52]
        node _T_381 = eq(_T_380, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_382 = or(_T_356, _T_361) @[Parameters.scala 552:42]
        node _T_383 = or(_T_382, _T_366) @[Parameters.scala 552:42]
        node _T_384 = or(_T_383, _T_371) @[Parameters.scala 552:42]
        node _T_385 = or(_T_384, _T_376) @[Parameters.scala 552:42]
        node _T_386 = or(_T_385, _T_381) @[Parameters.scala 552:42]
        node _T_387 = and(_T_351, _T_386) @[Parameters.scala 551:56]
        node _T_388 = or(UInt<1>("h00"), UInt<1>("h00")) @[Parameters.scala 551:31]
        node _T_389 = xor(io.in.a.bits.address, UInt<17>("h010000")) @[Parameters.scala 137:31]
        node _T_390 = cvt(_T_389) @[Parameters.scala 137:49]
        node _T_391 = and(_T_390, asSInt(UInt<17>("h010000"))) @[Parameters.scala 137:52]
        node _T_392 = asSInt(_T_391) @[Parameters.scala 137:52]
        node _T_393 = eq(_T_392, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_394 = and(_T_388, _T_393) @[Parameters.scala 551:56]
        node _T_395 = or(UInt<1>("h00"), _T_347) @[Parameters.scala 553:30]
        node _T_396 = or(_T_395, _T_387) @[Parameters.scala 553:30]
        node _T_397 = or(_T_396, _T_394) @[Parameters.scala 553:30]
        node _T_398 = asUInt(reset) @[Monitor.scala 44:11]
        node _T_399 = or(_T_397, _T_398) @[Monitor.scala 44:11]
        node _T_400 = eq(_T_399, UInt<1>("h00")) @[Monitor.scala 44:11]
        when _T_400 : @[Monitor.scala 44:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel carries PutFull type unsupported by manager (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
          skip @[Monitor.scala 44:11]
        node _T_401 = asUInt(reset) @[Monitor.scala 44:11]
        node _T_402 = or(_T_5[0], _T_401) @[Monitor.scala 44:11]
        node _T_403 = eq(_T_402, UInt<1>("h00")) @[Monitor.scala 44:11]
        when _T_403 : @[Monitor.scala 44:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel PutFull carries invalid source ID (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
          skip @[Monitor.scala 44:11]
        node _T_404 = asUInt(reset) @[Monitor.scala 44:11]
        node _T_405 = or(_T_11, _T_404) @[Monitor.scala 44:11]
        node _T_406 = eq(_T_405, UInt<1>("h00")) @[Monitor.scala 44:11]
        when _T_406 : @[Monitor.scala 44:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel PutFull address not aligned to size (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
          skip @[Monitor.scala 44:11]
        node _T_407 = eq(io.in.a.bits.param, UInt<1>("h00")) @[Monitor.scala 115:31]
        node _T_408 = asUInt(reset) @[Monitor.scala 44:11]
        node _T_409 = or(_T_407, _T_408) @[Monitor.scala 44:11]
        node _T_410 = eq(_T_409, UInt<1>("h00")) @[Monitor.scala 44:11]
        when _T_410 : @[Monitor.scala 44:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel PutFull carries invalid param (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
          skip @[Monitor.scala 44:11]
        node _T_411 = eq(io.in.a.bits.mask, _T_75) @[Monitor.scala 116:30]
        node _T_412 = asUInt(reset) @[Monitor.scala 44:11]
        node _T_413 = or(_T_411, _T_412) @[Monitor.scala 44:11]
        node _T_414 = eq(_T_413, UInt<1>("h00")) @[Monitor.scala 44:11]
        when _T_414 : @[Monitor.scala 44:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel PutFull contains invalid mask (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
          skip @[Monitor.scala 44:11]
        skip @[Monitor.scala 111:53]
      node _T_415 = eq(io.in.a.bits.opcode, UInt<1>("h01")) @[Monitor.scala 119:25]
      when _T_415 : @[Monitor.scala 119:56]
        node _T_416 = leq(UInt<1>("h00"), io.in.a.bits.size) @[Parameters.scala 93:32]
        node _T_417 = leq(io.in.a.bits.size, UInt<4>("h0c")) @[Parameters.scala 93:42]
        node _T_418 = and(_T_416, _T_417) @[Parameters.scala 93:37]
        node _T_419 = or(UInt<1>("h00"), _T_418) @[Parameters.scala 551:31]
        node _T_420 = xor(io.in.a.bits.address, UInt<14>("h03000")) @[Parameters.scala 137:31]
        node _T_421 = cvt(_T_420) @[Parameters.scala 137:49]
        node _T_422 = and(_T_421, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
        node _T_423 = asSInt(_T_422) @[Parameters.scala 137:52]
        node _T_424 = eq(_T_423, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_425 = and(_T_419, _T_424) @[Parameters.scala 551:56]
        node _T_426 = leq(UInt<1>("h00"), io.in.a.bits.size) @[Parameters.scala 93:32]
        node _T_427 = leq(io.in.a.bits.size, UInt<3>("h06")) @[Parameters.scala 93:42]
        node _T_428 = and(_T_426, _T_427) @[Parameters.scala 93:37]
        node _T_429 = or(UInt<1>("h00"), _T_428) @[Parameters.scala 551:31]
        node _T_430 = xor(io.in.a.bits.address, UInt<26>("h02010000")) @[Parameters.scala 137:31]
        node _T_431 = cvt(_T_430) @[Parameters.scala 137:49]
        node _T_432 = and(_T_431, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
        node _T_433 = asSInt(_T_432) @[Parameters.scala 137:52]
        node _T_434 = eq(_T_433, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_435 = xor(io.in.a.bits.address, UInt<31>("h054000000")) @[Parameters.scala 137:31]
        node _T_436 = cvt(_T_435) @[Parameters.scala 137:49]
        node _T_437 = and(_T_436, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
        node _T_438 = asSInt(_T_437) @[Parameters.scala 137:52]
        node _T_439 = eq(_T_438, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_440 = xor(io.in.a.bits.address, UInt<28>("h0c000000")) @[Parameters.scala 137:31]
        node _T_441 = cvt(_T_440) @[Parameters.scala 137:49]
        node _T_442 = and(_T_441, asSInt(UInt<27>("h04000000"))) @[Parameters.scala 137:52]
        node _T_443 = asSInt(_T_442) @[Parameters.scala 137:52]
        node _T_444 = eq(_T_443, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_445 = xor(io.in.a.bits.address, UInt<26>("h02000000")) @[Parameters.scala 137:31]
        node _T_446 = cvt(_T_445) @[Parameters.scala 137:49]
        node _T_447 = and(_T_446, asSInt(UInt<17>("h010000"))) @[Parameters.scala 137:52]
        node _T_448 = asSInt(_T_447) @[Parameters.scala 137:52]
        node _T_449 = eq(_T_448, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_450 = xor(io.in.a.bits.address, UInt<1>("h00")) @[Parameters.scala 137:31]
        node _T_451 = cvt(_T_450) @[Parameters.scala 137:49]
        node _T_452 = and(_T_451, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
        node _T_453 = asSInt(_T_452) @[Parameters.scala 137:52]
        node _T_454 = eq(_T_453, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_455 = xor(io.in.a.bits.address, UInt<32>("h080000000")) @[Parameters.scala 137:31]
        node _T_456 = cvt(_T_455) @[Parameters.scala 137:49]
        node _T_457 = and(_T_456, asSInt(UInt<29>("h010000000"))) @[Parameters.scala 137:52]
        node _T_458 = asSInt(_T_457) @[Parameters.scala 137:52]
        node _T_459 = eq(_T_458, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_460 = or(_T_434, _T_439) @[Parameters.scala 552:42]
        node _T_461 = or(_T_460, _T_444) @[Parameters.scala 552:42]
        node _T_462 = or(_T_461, _T_449) @[Parameters.scala 552:42]
        node _T_463 = or(_T_462, _T_454) @[Parameters.scala 552:42]
        node _T_464 = or(_T_463, _T_459) @[Parameters.scala 552:42]
        node _T_465 = and(_T_429, _T_464) @[Parameters.scala 551:56]
        node _T_466 = or(UInt<1>("h00"), UInt<1>("h00")) @[Parameters.scala 551:31]
        node _T_467 = xor(io.in.a.bits.address, UInt<17>("h010000")) @[Parameters.scala 137:31]
        node _T_468 = cvt(_T_467) @[Parameters.scala 137:49]
        node _T_469 = and(_T_468, asSInt(UInt<17>("h010000"))) @[Parameters.scala 137:52]
        node _T_470 = asSInt(_T_469) @[Parameters.scala 137:52]
        node _T_471 = eq(_T_470, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_472 = and(_T_466, _T_471) @[Parameters.scala 551:56]
        node _T_473 = or(UInt<1>("h00"), _T_425) @[Parameters.scala 553:30]
        node _T_474 = or(_T_473, _T_465) @[Parameters.scala 553:30]
        node _T_475 = or(_T_474, _T_472) @[Parameters.scala 553:30]
        node _T_476 = asUInt(reset) @[Monitor.scala 44:11]
        node _T_477 = or(_T_475, _T_476) @[Monitor.scala 44:11]
        node _T_478 = eq(_T_477, UInt<1>("h00")) @[Monitor.scala 44:11]
        when _T_478 : @[Monitor.scala 44:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel carries PutPartial type unsupported by manager (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
          skip @[Monitor.scala 44:11]
        node _T_479 = asUInt(reset) @[Monitor.scala 44:11]
        node _T_480 = or(_T_5[0], _T_479) @[Monitor.scala 44:11]
        node _T_481 = eq(_T_480, UInt<1>("h00")) @[Monitor.scala 44:11]
        when _T_481 : @[Monitor.scala 44:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel PutPartial carries invalid source ID (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
          skip @[Monitor.scala 44:11]
        node _T_482 = asUInt(reset) @[Monitor.scala 44:11]
        node _T_483 = or(_T_11, _T_482) @[Monitor.scala 44:11]
        node _T_484 = eq(_T_483, UInt<1>("h00")) @[Monitor.scala 44:11]
        when _T_484 : @[Monitor.scala 44:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel PutPartial address not aligned to size (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
          skip @[Monitor.scala 44:11]
        node _T_485 = eq(io.in.a.bits.param, UInt<1>("h00")) @[Monitor.scala 123:31]
        node _T_486 = asUInt(reset) @[Monitor.scala 44:11]
        node _T_487 = or(_T_485, _T_486) @[Monitor.scala 44:11]
        node _T_488 = eq(_T_487, UInt<1>("h00")) @[Monitor.scala 44:11]
        when _T_488 : @[Monitor.scala 44:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel PutPartial carries invalid param (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
          skip @[Monitor.scala 44:11]
        node _T_489 = not(_T_75) @[Monitor.scala 124:33]
        node _T_490 = and(io.in.a.bits.mask, _T_489) @[Monitor.scala 124:31]
        node _T_491 = eq(_T_490, UInt<1>("h00")) @[Monitor.scala 124:40]
        node _T_492 = asUInt(reset) @[Monitor.scala 44:11]
        node _T_493 = or(_T_491, _T_492) @[Monitor.scala 44:11]
        node _T_494 = eq(_T_493, UInt<1>("h00")) @[Monitor.scala 44:11]
        when _T_494 : @[Monitor.scala 44:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel PutPartial contains invalid mask (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
          skip @[Monitor.scala 44:11]
        skip @[Monitor.scala 119:56]
      node _T_495 = eq(io.in.a.bits.opcode, UInt<2>("h02")) @[Monitor.scala 127:25]
      when _T_495 : @[Monitor.scala 127:56]
        node _T_496 = leq(UInt<1>("h00"), io.in.a.bits.size) @[Parameters.scala 93:32]
        node _T_497 = leq(io.in.a.bits.size, UInt<2>("h03")) @[Parameters.scala 93:42]
        node _T_498 = and(_T_496, _T_497) @[Parameters.scala 93:37]
        node _T_499 = or(UInt<1>("h00"), _T_498) @[Parameters.scala 551:31]
        node _T_500 = xor(io.in.a.bits.address, UInt<14>("h03000")) @[Parameters.scala 137:31]
        node _T_501 = cvt(_T_500) @[Parameters.scala 137:49]
        node _T_502 = and(_T_501, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
        node _T_503 = asSInt(_T_502) @[Parameters.scala 137:52]
        node _T_504 = eq(_T_503, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_505 = xor(io.in.a.bits.address, UInt<26>("h02010000")) @[Parameters.scala 137:31]
        node _T_506 = cvt(_T_505) @[Parameters.scala 137:49]
        node _T_507 = and(_T_506, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
        node _T_508 = asSInt(_T_507) @[Parameters.scala 137:52]
        node _T_509 = eq(_T_508, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_510 = xor(io.in.a.bits.address, UInt<31>("h054000000")) @[Parameters.scala 137:31]
        node _T_511 = cvt(_T_510) @[Parameters.scala 137:49]
        node _T_512 = and(_T_511, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
        node _T_513 = asSInt(_T_512) @[Parameters.scala 137:52]
        node _T_514 = eq(_T_513, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_515 = xor(io.in.a.bits.address, UInt<28>("h0c000000")) @[Parameters.scala 137:31]
        node _T_516 = cvt(_T_515) @[Parameters.scala 137:49]
        node _T_517 = and(_T_516, asSInt(UInt<27>("h04000000"))) @[Parameters.scala 137:52]
        node _T_518 = asSInt(_T_517) @[Parameters.scala 137:52]
        node _T_519 = eq(_T_518, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_520 = xor(io.in.a.bits.address, UInt<26>("h02000000")) @[Parameters.scala 137:31]
        node _T_521 = cvt(_T_520) @[Parameters.scala 137:49]
        node _T_522 = and(_T_521, asSInt(UInt<17>("h010000"))) @[Parameters.scala 137:52]
        node _T_523 = asSInt(_T_522) @[Parameters.scala 137:52]
        node _T_524 = eq(_T_523, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_525 = xor(io.in.a.bits.address, UInt<1>("h00")) @[Parameters.scala 137:31]
        node _T_526 = cvt(_T_525) @[Parameters.scala 137:49]
        node _T_527 = and(_T_526, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
        node _T_528 = asSInt(_T_527) @[Parameters.scala 137:52]
        node _T_529 = eq(_T_528, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_530 = xor(io.in.a.bits.address, UInt<32>("h080000000")) @[Parameters.scala 137:31]
        node _T_531 = cvt(_T_530) @[Parameters.scala 137:49]
        node _T_532 = and(_T_531, asSInt(UInt<29>("h010000000"))) @[Parameters.scala 137:52]
        node _T_533 = asSInt(_T_532) @[Parameters.scala 137:52]
        node _T_534 = eq(_T_533, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_535 = or(_T_504, _T_509) @[Parameters.scala 552:42]
        node _T_536 = or(_T_535, _T_514) @[Parameters.scala 552:42]
        node _T_537 = or(_T_536, _T_519) @[Parameters.scala 552:42]
        node _T_538 = or(_T_537, _T_524) @[Parameters.scala 552:42]
        node _T_539 = or(_T_538, _T_529) @[Parameters.scala 552:42]
        node _T_540 = or(_T_539, _T_534) @[Parameters.scala 552:42]
        node _T_541 = and(_T_499, _T_540) @[Parameters.scala 551:56]
        node _T_542 = or(UInt<1>("h00"), UInt<1>("h00")) @[Parameters.scala 551:31]
        node _T_543 = xor(io.in.a.bits.address, UInt<17>("h010000")) @[Parameters.scala 137:31]
        node _T_544 = cvt(_T_543) @[Parameters.scala 137:49]
        node _T_545 = and(_T_544, asSInt(UInt<17>("h010000"))) @[Parameters.scala 137:52]
        node _T_546 = asSInt(_T_545) @[Parameters.scala 137:52]
        node _T_547 = eq(_T_546, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_548 = and(_T_542, _T_547) @[Parameters.scala 551:56]
        node _T_549 = or(UInt<1>("h00"), _T_541) @[Parameters.scala 553:30]
        node _T_550 = or(_T_549, _T_548) @[Parameters.scala 553:30]
        node _T_551 = asUInt(reset) @[Monitor.scala 44:11]
        node _T_552 = or(_T_550, _T_551) @[Monitor.scala 44:11]
        node _T_553 = eq(_T_552, UInt<1>("h00")) @[Monitor.scala 44:11]
        when _T_553 : @[Monitor.scala 44:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel carries Arithmetic type unsupported by manager (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
          skip @[Monitor.scala 44:11]
        node _T_554 = asUInt(reset) @[Monitor.scala 44:11]
        node _T_555 = or(_T_5[0], _T_554) @[Monitor.scala 44:11]
        node _T_556 = eq(_T_555, UInt<1>("h00")) @[Monitor.scala 44:11]
        when _T_556 : @[Monitor.scala 44:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel Arithmetic carries invalid source ID (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
          skip @[Monitor.scala 44:11]
        node _T_557 = asUInt(reset) @[Monitor.scala 44:11]
        node _T_558 = or(_T_11, _T_557) @[Monitor.scala 44:11]
        node _T_559 = eq(_T_558, UInt<1>("h00")) @[Monitor.scala 44:11]
        when _T_559 : @[Monitor.scala 44:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel Arithmetic address not aligned to size (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
          skip @[Monitor.scala 44:11]
        node _T_560 = leq(io.in.a.bits.param, UInt<3>("h04")) @[Bundles.scala 140:33]
        node _T_561 = asUInt(reset) @[Monitor.scala 44:11]
        node _T_562 = or(_T_560, _T_561) @[Monitor.scala 44:11]
        node _T_563 = eq(_T_562, UInt<1>("h00")) @[Monitor.scala 44:11]
        when _T_563 : @[Monitor.scala 44:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel Arithmetic carries invalid opcode param (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
          skip @[Monitor.scala 44:11]
        node _T_564 = eq(io.in.a.bits.mask, _T_75) @[Monitor.scala 132:30]
        node _T_565 = asUInt(reset) @[Monitor.scala 44:11]
        node _T_566 = or(_T_564, _T_565) @[Monitor.scala 44:11]
        node _T_567 = eq(_T_566, UInt<1>("h00")) @[Monitor.scala 44:11]
        when _T_567 : @[Monitor.scala 44:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel Arithmetic contains invalid mask (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
          skip @[Monitor.scala 44:11]
        skip @[Monitor.scala 127:56]
      node _T_568 = eq(io.in.a.bits.opcode, UInt<2>("h03")) @[Monitor.scala 135:25]
      when _T_568 : @[Monitor.scala 135:53]
        node _T_569 = leq(UInt<1>("h00"), io.in.a.bits.size) @[Parameters.scala 93:32]
        node _T_570 = leq(io.in.a.bits.size, UInt<2>("h03")) @[Parameters.scala 93:42]
        node _T_571 = and(_T_569, _T_570) @[Parameters.scala 93:37]
        node _T_572 = or(UInt<1>("h00"), _T_571) @[Parameters.scala 551:31]
        node _T_573 = xor(io.in.a.bits.address, UInt<14>("h03000")) @[Parameters.scala 137:31]
        node _T_574 = cvt(_T_573) @[Parameters.scala 137:49]
        node _T_575 = and(_T_574, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
        node _T_576 = asSInt(_T_575) @[Parameters.scala 137:52]
        node _T_577 = eq(_T_576, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_578 = xor(io.in.a.bits.address, UInt<26>("h02010000")) @[Parameters.scala 137:31]
        node _T_579 = cvt(_T_578) @[Parameters.scala 137:49]
        node _T_580 = and(_T_579, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
        node _T_581 = asSInt(_T_580) @[Parameters.scala 137:52]
        node _T_582 = eq(_T_581, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_583 = xor(io.in.a.bits.address, UInt<31>("h054000000")) @[Parameters.scala 137:31]
        node _T_584 = cvt(_T_583) @[Parameters.scala 137:49]
        node _T_585 = and(_T_584, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
        node _T_586 = asSInt(_T_585) @[Parameters.scala 137:52]
        node _T_587 = eq(_T_586, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_588 = xor(io.in.a.bits.address, UInt<28>("h0c000000")) @[Parameters.scala 137:31]
        node _T_589 = cvt(_T_588) @[Parameters.scala 137:49]
        node _T_590 = and(_T_589, asSInt(UInt<27>("h04000000"))) @[Parameters.scala 137:52]
        node _T_591 = asSInt(_T_590) @[Parameters.scala 137:52]
        node _T_592 = eq(_T_591, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_593 = xor(io.in.a.bits.address, UInt<26>("h02000000")) @[Parameters.scala 137:31]
        node _T_594 = cvt(_T_593) @[Parameters.scala 137:49]
        node _T_595 = and(_T_594, asSInt(UInt<17>("h010000"))) @[Parameters.scala 137:52]
        node _T_596 = asSInt(_T_595) @[Parameters.scala 137:52]
        node _T_597 = eq(_T_596, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_598 = xor(io.in.a.bits.address, UInt<1>("h00")) @[Parameters.scala 137:31]
        node _T_599 = cvt(_T_598) @[Parameters.scala 137:49]
        node _T_600 = and(_T_599, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
        node _T_601 = asSInt(_T_600) @[Parameters.scala 137:52]
        node _T_602 = eq(_T_601, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_603 = xor(io.in.a.bits.address, UInt<32>("h080000000")) @[Parameters.scala 137:31]
        node _T_604 = cvt(_T_603) @[Parameters.scala 137:49]
        node _T_605 = and(_T_604, asSInt(UInt<29>("h010000000"))) @[Parameters.scala 137:52]
        node _T_606 = asSInt(_T_605) @[Parameters.scala 137:52]
        node _T_607 = eq(_T_606, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_608 = or(_T_577, _T_582) @[Parameters.scala 552:42]
        node _T_609 = or(_T_608, _T_587) @[Parameters.scala 552:42]
        node _T_610 = or(_T_609, _T_592) @[Parameters.scala 552:42]
        node _T_611 = or(_T_610, _T_597) @[Parameters.scala 552:42]
        node _T_612 = or(_T_611, _T_602) @[Parameters.scala 552:42]
        node _T_613 = or(_T_612, _T_607) @[Parameters.scala 552:42]
        node _T_614 = and(_T_572, _T_613) @[Parameters.scala 551:56]
        node _T_615 = or(UInt<1>("h00"), UInt<1>("h00")) @[Parameters.scala 551:31]
        node _T_616 = xor(io.in.a.bits.address, UInt<17>("h010000")) @[Parameters.scala 137:31]
        node _T_617 = cvt(_T_616) @[Parameters.scala 137:49]
        node _T_618 = and(_T_617, asSInt(UInt<17>("h010000"))) @[Parameters.scala 137:52]
        node _T_619 = asSInt(_T_618) @[Parameters.scala 137:52]
        node _T_620 = eq(_T_619, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_621 = and(_T_615, _T_620) @[Parameters.scala 551:56]
        node _T_622 = or(UInt<1>("h00"), _T_614) @[Parameters.scala 553:30]
        node _T_623 = or(_T_622, _T_621) @[Parameters.scala 553:30]
        node _T_624 = asUInt(reset) @[Monitor.scala 44:11]
        node _T_625 = or(_T_623, _T_624) @[Monitor.scala 44:11]
        node _T_626 = eq(_T_625, UInt<1>("h00")) @[Monitor.scala 44:11]
        when _T_626 : @[Monitor.scala 44:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel carries Logical type unsupported by manager (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
          skip @[Monitor.scala 44:11]
        node _T_627 = asUInt(reset) @[Monitor.scala 44:11]
        node _T_628 = or(_T_5[0], _T_627) @[Monitor.scala 44:11]
        node _T_629 = eq(_T_628, UInt<1>("h00")) @[Monitor.scala 44:11]
        when _T_629 : @[Monitor.scala 44:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel Logical carries invalid source ID (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
          skip @[Monitor.scala 44:11]
        node _T_630 = asUInt(reset) @[Monitor.scala 44:11]
        node _T_631 = or(_T_11, _T_630) @[Monitor.scala 44:11]
        node _T_632 = eq(_T_631, UInt<1>("h00")) @[Monitor.scala 44:11]
        when _T_632 : @[Monitor.scala 44:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel Logical address not aligned to size (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
          skip @[Monitor.scala 44:11]
        node _T_633 = leq(io.in.a.bits.param, UInt<3>("h03")) @[Bundles.scala 147:30]
        node _T_634 = asUInt(reset) @[Monitor.scala 44:11]
        node _T_635 = or(_T_633, _T_634) @[Monitor.scala 44:11]
        node _T_636 = eq(_T_635, UInt<1>("h00")) @[Monitor.scala 44:11]
        when _T_636 : @[Monitor.scala 44:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel Logical carries invalid opcode param (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
          skip @[Monitor.scala 44:11]
        node _T_637 = eq(io.in.a.bits.mask, _T_75) @[Monitor.scala 140:30]
        node _T_638 = asUInt(reset) @[Monitor.scala 44:11]
        node _T_639 = or(_T_637, _T_638) @[Monitor.scala 44:11]
        node _T_640 = eq(_T_639, UInt<1>("h00")) @[Monitor.scala 44:11]
        when _T_640 : @[Monitor.scala 44:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel Logical contains invalid mask (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
          skip @[Monitor.scala 44:11]
        skip @[Monitor.scala 135:53]
      node _T_641 = eq(io.in.a.bits.opcode, UInt<3>("h05")) @[Monitor.scala 143:25]
      when _T_641 : @[Monitor.scala 143:46]
        node _T_642 = leq(UInt<1>("h00"), io.in.a.bits.size) @[Parameters.scala 93:32]
        node _T_643 = leq(io.in.a.bits.size, UInt<4>("h0c")) @[Parameters.scala 93:42]
        node _T_644 = and(_T_642, _T_643) @[Parameters.scala 93:37]
        node _T_645 = or(UInt<1>("h00"), _T_644) @[Parameters.scala 551:31]
        node _T_646 = xor(io.in.a.bits.address, UInt<14>("h03000")) @[Parameters.scala 137:31]
        node _T_647 = cvt(_T_646) @[Parameters.scala 137:49]
        node _T_648 = and(_T_647, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
        node _T_649 = asSInt(_T_648) @[Parameters.scala 137:52]
        node _T_650 = eq(_T_649, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_651 = and(_T_645, _T_650) @[Parameters.scala 551:56]
        node _T_652 = or(UInt<1>("h00"), UInt<1>("h00")) @[Parameters.scala 551:31]
        node _T_653 = xor(io.in.a.bits.address, UInt<26>("h02010000")) @[Parameters.scala 137:31]
        node _T_654 = cvt(_T_653) @[Parameters.scala 137:49]
        node _T_655 = and(_T_654, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
        node _T_656 = asSInt(_T_655) @[Parameters.scala 137:52]
        node _T_657 = eq(_T_656, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_658 = xor(io.in.a.bits.address, UInt<31>("h054000000")) @[Parameters.scala 137:31]
        node _T_659 = cvt(_T_658) @[Parameters.scala 137:49]
        node _T_660 = and(_T_659, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
        node _T_661 = asSInt(_T_660) @[Parameters.scala 137:52]
        node _T_662 = eq(_T_661, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_663 = xor(io.in.a.bits.address, UInt<28>("h0c000000")) @[Parameters.scala 137:31]
        node _T_664 = cvt(_T_663) @[Parameters.scala 137:49]
        node _T_665 = and(_T_664, asSInt(UInt<27>("h04000000"))) @[Parameters.scala 137:52]
        node _T_666 = asSInt(_T_665) @[Parameters.scala 137:52]
        node _T_667 = eq(_T_666, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_668 = xor(io.in.a.bits.address, UInt<26>("h02000000")) @[Parameters.scala 137:31]
        node _T_669 = cvt(_T_668) @[Parameters.scala 137:49]
        node _T_670 = and(_T_669, asSInt(UInt<17>("h010000"))) @[Parameters.scala 137:52]
        node _T_671 = asSInt(_T_670) @[Parameters.scala 137:52]
        node _T_672 = eq(_T_671, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_673 = xor(io.in.a.bits.address, UInt<1>("h00")) @[Parameters.scala 137:31]
        node _T_674 = cvt(_T_673) @[Parameters.scala 137:49]
        node _T_675 = and(_T_674, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
        node _T_676 = asSInt(_T_675) @[Parameters.scala 137:52]
        node _T_677 = eq(_T_676, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_678 = xor(io.in.a.bits.address, UInt<17>("h010000")) @[Parameters.scala 137:31]
        node _T_679 = cvt(_T_678) @[Parameters.scala 137:49]
        node _T_680 = and(_T_679, asSInt(UInt<17>("h010000"))) @[Parameters.scala 137:52]
        node _T_681 = asSInt(_T_680) @[Parameters.scala 137:52]
        node _T_682 = eq(_T_681, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_683 = or(_T_657, _T_662) @[Parameters.scala 552:42]
        node _T_684 = or(_T_683, _T_667) @[Parameters.scala 552:42]
        node _T_685 = or(_T_684, _T_672) @[Parameters.scala 552:42]
        node _T_686 = or(_T_685, _T_677) @[Parameters.scala 552:42]
        node _T_687 = or(_T_686, _T_682) @[Parameters.scala 552:42]
        node _T_688 = and(_T_652, _T_687) @[Parameters.scala 551:56]
        node _T_689 = leq(UInt<1>("h00"), io.in.a.bits.size) @[Parameters.scala 93:32]
        node _T_690 = leq(io.in.a.bits.size, UInt<3>("h06")) @[Parameters.scala 93:42]
        node _T_691 = and(_T_689, _T_690) @[Parameters.scala 93:37]
        node _T_692 = or(UInt<1>("h00"), _T_691) @[Parameters.scala 551:31]
        node _T_693 = xor(io.in.a.bits.address, UInt<32>("h080000000")) @[Parameters.scala 137:31]
        node _T_694 = cvt(_T_693) @[Parameters.scala 137:49]
        node _T_695 = and(_T_694, asSInt(UInt<29>("h010000000"))) @[Parameters.scala 137:52]
        node _T_696 = asSInt(_T_695) @[Parameters.scala 137:52]
        node _T_697 = eq(_T_696, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
        node _T_698 = and(_T_692, _T_697) @[Parameters.scala 551:56]
        node _T_699 = or(UInt<1>("h00"), _T_651) @[Parameters.scala 553:30]
        node _T_700 = or(_T_699, _T_688) @[Parameters.scala 553:30]
        node _T_701 = or(_T_700, _T_698) @[Parameters.scala 553:30]
        node _T_702 = asUInt(reset) @[Monitor.scala 44:11]
        node _T_703 = or(_T_701, _T_702) @[Monitor.scala 44:11]
        node _T_704 = eq(_T_703, UInt<1>("h00")) @[Monitor.scala 44:11]
        when _T_704 : @[Monitor.scala 44:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel carries Hint type unsupported by manager (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
          skip @[Monitor.scala 44:11]
        node _T_705 = asUInt(reset) @[Monitor.scala 44:11]
        node _T_706 = or(_T_5[0], _T_705) @[Monitor.scala 44:11]
        node _T_707 = eq(_T_706, UInt<1>("h00")) @[Monitor.scala 44:11]
        when _T_707 : @[Monitor.scala 44:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel Hint carries invalid source ID (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
          skip @[Monitor.scala 44:11]
        node _T_708 = asUInt(reset) @[Monitor.scala 44:11]
        node _T_709 = or(_T_11, _T_708) @[Monitor.scala 44:11]
        node _T_710 = eq(_T_709, UInt<1>("h00")) @[Monitor.scala 44:11]
        when _T_710 : @[Monitor.scala 44:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel Hint address not aligned to size (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
          skip @[Monitor.scala 44:11]
        node _T_711 = leq(io.in.a.bits.param, UInt<1>("h01")) @[Bundles.scala 160:28]
        node _T_712 = asUInt(reset) @[Monitor.scala 44:11]
        node _T_713 = or(_T_711, _T_712) @[Monitor.scala 44:11]
        node _T_714 = eq(_T_713, UInt<1>("h00")) @[Monitor.scala 44:11]
        when _T_714 : @[Monitor.scala 44:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel Hint carries invalid opcode param (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
          skip @[Monitor.scala 44:11]
        node _T_715 = eq(io.in.a.bits.mask, _T_75) @[Monitor.scala 148:30]
        node _T_716 = asUInt(reset) @[Monitor.scala 44:11]
        node _T_717 = or(_T_715, _T_716) @[Monitor.scala 44:11]
        node _T_718 = eq(_T_717, UInt<1>("h00")) @[Monitor.scala 44:11]
        when _T_718 : @[Monitor.scala 44:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel Hint contains invalid mask (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
          skip @[Monitor.scala 44:11]
        node _T_719 = eq(io.in.a.bits.corrupt, UInt<1>("h00")) @[Monitor.scala 149:18]
        node _T_720 = asUInt(reset) @[Monitor.scala 44:11]
        node _T_721 = or(_T_719, _T_720) @[Monitor.scala 44:11]
        node _T_722 = eq(_T_721, UInt<1>("h00")) @[Monitor.scala 44:11]
        when _T_722 : @[Monitor.scala 44:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'A' channel Hint is corrupt (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
          skip @[Monitor.scala 44:11]
        skip @[Monitor.scala 143:46]
      skip @[Monitor.scala 366:27]
    when io.in.d.valid : @[Monitor.scala 367:27]
      node _T_723 = leq(io.in.d.bits.opcode, UInt<3>("h06")) @[Bundles.scala 44:24]
      node _T_724 = asUInt(reset) @[Monitor.scala 51:11]
      node _T_725 = or(_T_723, _T_724) @[Monitor.scala 51:11]
      node _T_726 = eq(_T_725, UInt<1>("h00")) @[Monitor.scala 51:11]
      when _T_726 : @[Monitor.scala 51:11]
        printf(clock, UInt<1>(1), "Assertion failed: 'D' channel has invalid opcode (connected at SystemBus.scala:39:55)\n    at Monitor.scala:51 assert(cond, message)\n") @[Monitor.scala 51:11]
        stop(clock, UInt<1>(1), 1) @[Monitor.scala 51:11]
        skip @[Monitor.scala 51:11]
      node _T_727 = eq(io.in.d.bits.source, UInt<1>("h00")) @[Parameters.scala 47:9]
      wire _T_728 : UInt<1>[1] @[Parameters.scala 923:27]
      _T_728 is invalid @[Parameters.scala 923:27]
      _T_728[0] <= _T_727 @[Parameters.scala 923:27]
      node _T_729 = lt(io.in.d.bits.sink, UInt<4>("h08")) @[Monitor.scala 303:31]
      node _T_730 = eq(io.in.d.bits.opcode, UInt<3>("h06")) @[Monitor.scala 307:25]
      when _T_730 : @[Monitor.scala 307:52]
        node _T_731 = asUInt(reset) @[Monitor.scala 51:11]
        node _T_732 = or(_T_728[0], _T_731) @[Monitor.scala 51:11]
        node _T_733 = eq(_T_732, UInt<1>("h00")) @[Monitor.scala 51:11]
        when _T_733 : @[Monitor.scala 51:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'D' channel ReleaseAck carries invalid source ID (connected at SystemBus.scala:39:55)\n    at Monitor.scala:51 assert(cond, message)\n") @[Monitor.scala 51:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 51:11]
          skip @[Monitor.scala 51:11]
        node _T_734 = geq(io.in.d.bits.size, UInt<2>("h03")) @[Monitor.scala 309:27]
        node _T_735 = asUInt(reset) @[Monitor.scala 51:11]
        node _T_736 = or(_T_734, _T_735) @[Monitor.scala 51:11]
        node _T_737 = eq(_T_736, UInt<1>("h00")) @[Monitor.scala 51:11]
        when _T_737 : @[Monitor.scala 51:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'D' channel ReleaseAck smaller than a beat (connected at SystemBus.scala:39:55)\n    at Monitor.scala:51 assert(cond, message)\n") @[Monitor.scala 51:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 51:11]
          skip @[Monitor.scala 51:11]
        node _T_738 = eq(io.in.d.bits.param, UInt<1>("h00")) @[Monitor.scala 310:28]
        node _T_739 = asUInt(reset) @[Monitor.scala 51:11]
        node _T_740 = or(_T_738, _T_739) @[Monitor.scala 51:11]
        node _T_741 = eq(_T_740, UInt<1>("h00")) @[Monitor.scala 51:11]
        when _T_741 : @[Monitor.scala 51:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'D' channel ReleaseeAck carries invalid param (connected at SystemBus.scala:39:55)\n    at Monitor.scala:51 assert(cond, message)\n") @[Monitor.scala 51:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 51:11]
          skip @[Monitor.scala 51:11]
        node _T_742 = eq(io.in.d.bits.corrupt, UInt<1>("h00")) @[Monitor.scala 311:15]
        node _T_743 = asUInt(reset) @[Monitor.scala 51:11]
        node _T_744 = or(_T_742, _T_743) @[Monitor.scala 51:11]
        node _T_745 = eq(_T_744, UInt<1>("h00")) @[Monitor.scala 51:11]
        when _T_745 : @[Monitor.scala 51:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'D' channel ReleaseAck is corrupt (connected at SystemBus.scala:39:55)\n    at Monitor.scala:51 assert(cond, message)\n") @[Monitor.scala 51:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 51:11]
          skip @[Monitor.scala 51:11]
        node _T_746 = eq(io.in.d.bits.denied, UInt<1>("h00")) @[Monitor.scala 312:15]
        node _T_747 = asUInt(reset) @[Monitor.scala 51:11]
        node _T_748 = or(_T_746, _T_747) @[Monitor.scala 51:11]
        node _T_749 = eq(_T_748, UInt<1>("h00")) @[Monitor.scala 51:11]
        when _T_749 : @[Monitor.scala 51:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'D' channel ReleaseAck is denied (connected at SystemBus.scala:39:55)\n    at Monitor.scala:51 assert(cond, message)\n") @[Monitor.scala 51:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 51:11]
          skip @[Monitor.scala 51:11]
        skip @[Monitor.scala 307:52]
      node _T_750 = eq(io.in.d.bits.opcode, UInt<3>("h04")) @[Monitor.scala 315:25]
      when _T_750 : @[Monitor.scala 315:47]
        node _T_751 = asUInt(reset) @[Monitor.scala 51:11]
        node _T_752 = or(_T_728[0], _T_751) @[Monitor.scala 51:11]
        node _T_753 = eq(_T_752, UInt<1>("h00")) @[Monitor.scala 51:11]
        when _T_753 : @[Monitor.scala 51:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'D' channel Grant carries invalid source ID (connected at SystemBus.scala:39:55)\n    at Monitor.scala:51 assert(cond, message)\n") @[Monitor.scala 51:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 51:11]
          skip @[Monitor.scala 51:11]
        node _T_754 = asUInt(reset) @[Monitor.scala 51:11]
        node _T_755 = or(_T_729, _T_754) @[Monitor.scala 51:11]
        node _T_756 = eq(_T_755, UInt<1>("h00")) @[Monitor.scala 51:11]
        when _T_756 : @[Monitor.scala 51:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'D' channel Grant carries invalid sink ID (connected at SystemBus.scala:39:55)\n    at Monitor.scala:51 assert(cond, message)\n") @[Monitor.scala 51:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 51:11]
          skip @[Monitor.scala 51:11]
        node _T_757 = geq(io.in.d.bits.size, UInt<2>("h03")) @[Monitor.scala 318:27]
        node _T_758 = asUInt(reset) @[Monitor.scala 51:11]
        node _T_759 = or(_T_757, _T_758) @[Monitor.scala 51:11]
        node _T_760 = eq(_T_759, UInt<1>("h00")) @[Monitor.scala 51:11]
        when _T_760 : @[Monitor.scala 51:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'D' channel Grant smaller than a beat (connected at SystemBus.scala:39:55)\n    at Monitor.scala:51 assert(cond, message)\n") @[Monitor.scala 51:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 51:11]
          skip @[Monitor.scala 51:11]
        node _T_761 = leq(io.in.d.bits.param, UInt<2>("h02")) @[Bundles.scala 104:26]
        node _T_762 = asUInt(reset) @[Monitor.scala 51:11]
        node _T_763 = or(_T_761, _T_762) @[Monitor.scala 51:11]
        node _T_764 = eq(_T_763, UInt<1>("h00")) @[Monitor.scala 51:11]
        when _T_764 : @[Monitor.scala 51:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'D' channel Grant carries invalid cap param (connected at SystemBus.scala:39:55)\n    at Monitor.scala:51 assert(cond, message)\n") @[Monitor.scala 51:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 51:11]
          skip @[Monitor.scala 51:11]
        node _T_765 = neq(io.in.d.bits.param, UInt<2>("h02")) @[Monitor.scala 320:28]
        node _T_766 = asUInt(reset) @[Monitor.scala 51:11]
        node _T_767 = or(_T_765, _T_766) @[Monitor.scala 51:11]
        node _T_768 = eq(_T_767, UInt<1>("h00")) @[Monitor.scala 51:11]
        when _T_768 : @[Monitor.scala 51:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'D' channel Grant carries toN param (connected at SystemBus.scala:39:55)\n    at Monitor.scala:51 assert(cond, message)\n") @[Monitor.scala 51:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 51:11]
          skip @[Monitor.scala 51:11]
        node _T_769 = eq(io.in.d.bits.corrupt, UInt<1>("h00")) @[Monitor.scala 321:15]
        node _T_770 = asUInt(reset) @[Monitor.scala 51:11]
        node _T_771 = or(_T_769, _T_770) @[Monitor.scala 51:11]
        node _T_772 = eq(_T_771, UInt<1>("h00")) @[Monitor.scala 51:11]
        when _T_772 : @[Monitor.scala 51:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'D' channel Grant is corrupt (connected at SystemBus.scala:39:55)\n    at Monitor.scala:51 assert(cond, message)\n") @[Monitor.scala 51:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 51:11]
          skip @[Monitor.scala 51:11]
        node _T_773 = eq(io.in.d.bits.denied, UInt<1>("h00")) @[Monitor.scala 322:30]
        node _T_774 = or(UInt<1>("h01"), _T_773) @[Monitor.scala 322:27]
        node _T_775 = asUInt(reset) @[Monitor.scala 51:11]
        node _T_776 = or(_T_774, _T_775) @[Monitor.scala 51:11]
        node _T_777 = eq(_T_776, UInt<1>("h00")) @[Monitor.scala 51:11]
        when _T_777 : @[Monitor.scala 51:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'D' channel Grant is denied (connected at SystemBus.scala:39:55)\n    at Monitor.scala:51 assert(cond, message)\n") @[Monitor.scala 51:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 51:11]
          skip @[Monitor.scala 51:11]
        skip @[Monitor.scala 315:47]
      node _T_778 = eq(io.in.d.bits.opcode, UInt<3>("h05")) @[Monitor.scala 325:25]
      when _T_778 : @[Monitor.scala 325:51]
        node _T_779 = asUInt(reset) @[Monitor.scala 51:11]
        node _T_780 = or(_T_728[0], _T_779) @[Monitor.scala 51:11]
        node _T_781 = eq(_T_780, UInt<1>("h00")) @[Monitor.scala 51:11]
        when _T_781 : @[Monitor.scala 51:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'D' channel GrantData carries invalid source ID (connected at SystemBus.scala:39:55)\n    at Monitor.scala:51 assert(cond, message)\n") @[Monitor.scala 51:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 51:11]
          skip @[Monitor.scala 51:11]
        node _T_782 = asUInt(reset) @[Monitor.scala 51:11]
        node _T_783 = or(_T_729, _T_782) @[Monitor.scala 51:11]
        node _T_784 = eq(_T_783, UInt<1>("h00")) @[Monitor.scala 51:11]
        when _T_784 : @[Monitor.scala 51:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'D' channel GrantData carries invalid sink ID (connected at SystemBus.scala:39:55)\n    at Monitor.scala:51 assert(cond, message)\n") @[Monitor.scala 51:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 51:11]
          skip @[Monitor.scala 51:11]
        node _T_785 = geq(io.in.d.bits.size, UInt<2>("h03")) @[Monitor.scala 328:27]
        node _T_786 = asUInt(reset) @[Monitor.scala 51:11]
        node _T_787 = or(_T_785, _T_786) @[Monitor.scala 51:11]
        node _T_788 = eq(_T_787, UInt<1>("h00")) @[Monitor.scala 51:11]
        when _T_788 : @[Monitor.scala 51:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'D' channel GrantData smaller than a beat (connected at SystemBus.scala:39:55)\n    at Monitor.scala:51 assert(cond, message)\n") @[Monitor.scala 51:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 51:11]
          skip @[Monitor.scala 51:11]
        node _T_789 = leq(io.in.d.bits.param, UInt<2>("h02")) @[Bundles.scala 104:26]
        node _T_790 = asUInt(reset) @[Monitor.scala 51:11]
        node _T_791 = or(_T_789, _T_790) @[Monitor.scala 51:11]
        node _T_792 = eq(_T_791, UInt<1>("h00")) @[Monitor.scala 51:11]
        when _T_792 : @[Monitor.scala 51:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'D' channel GrantData carries invalid cap param (connected at SystemBus.scala:39:55)\n    at Monitor.scala:51 assert(cond, message)\n") @[Monitor.scala 51:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 51:11]
          skip @[Monitor.scala 51:11]
        node _T_793 = neq(io.in.d.bits.param, UInt<2>("h02")) @[Monitor.scala 330:28]
        node _T_794 = asUInt(reset) @[Monitor.scala 51:11]
        node _T_795 = or(_T_793, _T_794) @[Monitor.scala 51:11]
        node _T_796 = eq(_T_795, UInt<1>("h00")) @[Monitor.scala 51:11]
        when _T_796 : @[Monitor.scala 51:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'D' channel GrantData carries toN param (connected at SystemBus.scala:39:55)\n    at Monitor.scala:51 assert(cond, message)\n") @[Monitor.scala 51:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 51:11]
          skip @[Monitor.scala 51:11]
        node _T_797 = eq(io.in.d.bits.denied, UInt<1>("h00")) @[Monitor.scala 331:15]
        node _T_798 = or(_T_797, io.in.d.bits.corrupt) @[Monitor.scala 331:30]
        node _T_799 = asUInt(reset) @[Monitor.scala 51:11]
        node _T_800 = or(_T_798, _T_799) @[Monitor.scala 51:11]
        node _T_801 = eq(_T_800, UInt<1>("h00")) @[Monitor.scala 51:11]
        when _T_801 : @[Monitor.scala 51:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'D' channel GrantData is denied but not corrupt (connected at SystemBus.scala:39:55)\n    at Monitor.scala:51 assert(cond, message)\n") @[Monitor.scala 51:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 51:11]
          skip @[Monitor.scala 51:11]
        node _T_802 = eq(io.in.d.bits.denied, UInt<1>("h00")) @[Monitor.scala 332:30]
        node _T_803 = or(UInt<1>("h01"), _T_802) @[Monitor.scala 332:27]
        node _T_804 = asUInt(reset) @[Monitor.scala 51:11]
        node _T_805 = or(_T_803, _T_804) @[Monitor.scala 51:11]
        node _T_806 = eq(_T_805, UInt<1>("h00")) @[Monitor.scala 51:11]
        when _T_806 : @[Monitor.scala 51:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'D' channel GrantData is denied (connected at SystemBus.scala:39:55)\n    at Monitor.scala:51 assert(cond, message)\n") @[Monitor.scala 51:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 51:11]
          skip @[Monitor.scala 51:11]
        skip @[Monitor.scala 325:51]
      node _T_807 = eq(io.in.d.bits.opcode, UInt<1>("h00")) @[Monitor.scala 335:25]
      when _T_807 : @[Monitor.scala 335:51]
        node _T_808 = asUInt(reset) @[Monitor.scala 51:11]
        node _T_809 = or(_T_728[0], _T_808) @[Monitor.scala 51:11]
        node _T_810 = eq(_T_809, UInt<1>("h00")) @[Monitor.scala 51:11]
        when _T_810 : @[Monitor.scala 51:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'D' channel AccessAck carries invalid source ID (connected at SystemBus.scala:39:55)\n    at Monitor.scala:51 assert(cond, message)\n") @[Monitor.scala 51:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 51:11]
          skip @[Monitor.scala 51:11]
        node _T_811 = eq(io.in.d.bits.param, UInt<1>("h00")) @[Monitor.scala 338:28]
        node _T_812 = asUInt(reset) @[Monitor.scala 51:11]
        node _T_813 = or(_T_811, _T_812) @[Monitor.scala 51:11]
        node _T_814 = eq(_T_813, UInt<1>("h00")) @[Monitor.scala 51:11]
        when _T_814 : @[Monitor.scala 51:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'D' channel AccessAck carries invalid param (connected at SystemBus.scala:39:55)\n    at Monitor.scala:51 assert(cond, message)\n") @[Monitor.scala 51:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 51:11]
          skip @[Monitor.scala 51:11]
        node _T_815 = eq(io.in.d.bits.corrupt, UInt<1>("h00")) @[Monitor.scala 339:15]
        node _T_816 = asUInt(reset) @[Monitor.scala 51:11]
        node _T_817 = or(_T_815, _T_816) @[Monitor.scala 51:11]
        node _T_818 = eq(_T_817, UInt<1>("h00")) @[Monitor.scala 51:11]
        when _T_818 : @[Monitor.scala 51:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'D' channel AccessAck is corrupt (connected at SystemBus.scala:39:55)\n    at Monitor.scala:51 assert(cond, message)\n") @[Monitor.scala 51:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 51:11]
          skip @[Monitor.scala 51:11]
        node _T_819 = eq(io.in.d.bits.denied, UInt<1>("h00")) @[Monitor.scala 340:30]
        node _T_820 = or(UInt<1>("h01"), _T_819) @[Monitor.scala 340:27]
        node _T_821 = asUInt(reset) @[Monitor.scala 51:11]
        node _T_822 = or(_T_820, _T_821) @[Monitor.scala 51:11]
        node _T_823 = eq(_T_822, UInt<1>("h00")) @[Monitor.scala 51:11]
        when _T_823 : @[Monitor.scala 51:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'D' channel AccessAck is denied (connected at SystemBus.scala:39:55)\n    at Monitor.scala:51 assert(cond, message)\n") @[Monitor.scala 51:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 51:11]
          skip @[Monitor.scala 51:11]
        skip @[Monitor.scala 335:51]
      node _T_824 = eq(io.in.d.bits.opcode, UInt<1>("h01")) @[Monitor.scala 343:25]
      when _T_824 : @[Monitor.scala 343:55]
        node _T_825 = asUInt(reset) @[Monitor.scala 51:11]
        node _T_826 = or(_T_728[0], _T_825) @[Monitor.scala 51:11]
        node _T_827 = eq(_T_826, UInt<1>("h00")) @[Monitor.scala 51:11]
        when _T_827 : @[Monitor.scala 51:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'D' channel AccessAckData carries invalid source ID (connected at SystemBus.scala:39:55)\n    at Monitor.scala:51 assert(cond, message)\n") @[Monitor.scala 51:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 51:11]
          skip @[Monitor.scala 51:11]
        node _T_828 = eq(io.in.d.bits.param, UInt<1>("h00")) @[Monitor.scala 346:28]
        node _T_829 = asUInt(reset) @[Monitor.scala 51:11]
        node _T_830 = or(_T_828, _T_829) @[Monitor.scala 51:11]
        node _T_831 = eq(_T_830, UInt<1>("h00")) @[Monitor.scala 51:11]
        when _T_831 : @[Monitor.scala 51:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'D' channel AccessAckData carries invalid param (connected at SystemBus.scala:39:55)\n    at Monitor.scala:51 assert(cond, message)\n") @[Monitor.scala 51:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 51:11]
          skip @[Monitor.scala 51:11]
        node _T_832 = eq(io.in.d.bits.denied, UInt<1>("h00")) @[Monitor.scala 347:15]
        node _T_833 = or(_T_832, io.in.d.bits.corrupt) @[Monitor.scala 347:30]
        node _T_834 = asUInt(reset) @[Monitor.scala 51:11]
        node _T_835 = or(_T_833, _T_834) @[Monitor.scala 51:11]
        node _T_836 = eq(_T_835, UInt<1>("h00")) @[Monitor.scala 51:11]
        when _T_836 : @[Monitor.scala 51:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'D' channel AccessAckData is denied but not corrupt (connected at SystemBus.scala:39:55)\n    at Monitor.scala:51 assert(cond, message)\n") @[Monitor.scala 51:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 51:11]
          skip @[Monitor.scala 51:11]
        node _T_837 = eq(io.in.d.bits.denied, UInt<1>("h00")) @[Monitor.scala 348:30]
        node _T_838 = or(UInt<1>("h01"), _T_837) @[Monitor.scala 348:27]
        node _T_839 = asUInt(reset) @[Monitor.scala 51:11]
        node _T_840 = or(_T_838, _T_839) @[Monitor.scala 51:11]
        node _T_841 = eq(_T_840, UInt<1>("h00")) @[Monitor.scala 51:11]
        when _T_841 : @[Monitor.scala 51:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'D' channel AccessAckData is denied (connected at SystemBus.scala:39:55)\n    at Monitor.scala:51 assert(cond, message)\n") @[Monitor.scala 51:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 51:11]
          skip @[Monitor.scala 51:11]
        skip @[Monitor.scala 343:55]
      node _T_842 = eq(io.in.d.bits.opcode, UInt<2>("h02")) @[Monitor.scala 351:25]
      when _T_842 : @[Monitor.scala 351:49]
        node _T_843 = asUInt(reset) @[Monitor.scala 51:11]
        node _T_844 = or(_T_728[0], _T_843) @[Monitor.scala 51:11]
        node _T_845 = eq(_T_844, UInt<1>("h00")) @[Monitor.scala 51:11]
        when _T_845 : @[Monitor.scala 51:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'D' channel HintAck carries invalid source ID (connected at SystemBus.scala:39:55)\n    at Monitor.scala:51 assert(cond, message)\n") @[Monitor.scala 51:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 51:11]
          skip @[Monitor.scala 51:11]
        node _T_846 = eq(io.in.d.bits.param, UInt<1>("h00")) @[Monitor.scala 354:28]
        node _T_847 = asUInt(reset) @[Monitor.scala 51:11]
        node _T_848 = or(_T_846, _T_847) @[Monitor.scala 51:11]
        node _T_849 = eq(_T_848, UInt<1>("h00")) @[Monitor.scala 51:11]
        when _T_849 : @[Monitor.scala 51:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'D' channel HintAck carries invalid param (connected at SystemBus.scala:39:55)\n    at Monitor.scala:51 assert(cond, message)\n") @[Monitor.scala 51:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 51:11]
          skip @[Monitor.scala 51:11]
        node _T_850 = eq(io.in.d.bits.corrupt, UInt<1>("h00")) @[Monitor.scala 355:15]
        node _T_851 = asUInt(reset) @[Monitor.scala 51:11]
        node _T_852 = or(_T_850, _T_851) @[Monitor.scala 51:11]
        node _T_853 = eq(_T_852, UInt<1>("h00")) @[Monitor.scala 51:11]
        when _T_853 : @[Monitor.scala 51:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'D' channel HintAck is corrupt (connected at SystemBus.scala:39:55)\n    at Monitor.scala:51 assert(cond, message)\n") @[Monitor.scala 51:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 51:11]
          skip @[Monitor.scala 51:11]
        node _T_854 = eq(io.in.d.bits.denied, UInt<1>("h00")) @[Monitor.scala 356:30]
        node _T_855 = or(UInt<1>("h01"), _T_854) @[Monitor.scala 356:27]
        node _T_856 = asUInt(reset) @[Monitor.scala 51:11]
        node _T_857 = or(_T_855, _T_856) @[Monitor.scala 51:11]
        node _T_858 = eq(_T_857, UInt<1>("h00")) @[Monitor.scala 51:11]
        when _T_858 : @[Monitor.scala 51:11]
          printf(clock, UInt<1>(1), "Assertion failed: 'D' channel HintAck is denied (connected at SystemBus.scala:39:55)\n    at Monitor.scala:51 assert(cond, message)\n") @[Monitor.scala 51:11]
          stop(clock, UInt<1>(1), 1) @[Monitor.scala 51:11]
          skip @[Monitor.scala 51:11]
        skip @[Monitor.scala 351:49]
      skip @[Monitor.scala 367:27]
    wire _T_859 : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, address : UInt<32>, mask : UInt<8>, data : UInt<64>, corrupt : UInt<1>}} @[Bundles.scala 256:54]
    _T_859 is invalid @[Bundles.scala 256:54]
    node _T_860 = eq(_T_859.valid, UInt<1>("h00")) @[Monitor.scala 373:18]
    node _T_861 = asUInt(reset) @[Monitor.scala 44:11]
    node _T_862 = or(_T_860, _T_861) @[Monitor.scala 44:11]
    node _T_863 = eq(_T_862, UInt<1>("h00")) @[Monitor.scala 44:11]
    when _T_863 : @[Monitor.scala 44:11]
      printf(clock, UInt<1>(1), "Assertion failed: 'B' channel valid and not TL-C (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
      stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
      skip @[Monitor.scala 44:11]
    wire _T_864 : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, data : UInt<64>, corrupt : UInt<1>}} @[Bundles.scala 257:54]
    _T_864 is invalid @[Bundles.scala 257:54]
    node _T_865 = eq(_T_864.valid, UInt<1>("h00")) @[Monitor.scala 374:18]
    node _T_866 = asUInt(reset) @[Monitor.scala 44:11]
    node _T_867 = or(_T_865, _T_866) @[Monitor.scala 44:11]
    node _T_868 = eq(_T_867, UInt<1>("h00")) @[Monitor.scala 44:11]
    when _T_868 : @[Monitor.scala 44:11]
      printf(clock, UInt<1>(1), "Assertion failed: 'C' channel valid and not TL-C (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
      stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
      skip @[Monitor.scala 44:11]
    wire _T_869 : {flip ready : UInt<1>, valid : UInt<1>, bits : {sink : UInt<3>}} @[Bundles.scala 259:54]
    _T_869 is invalid @[Bundles.scala 259:54]
    node _T_870 = eq(_T_869.valid, UInt<1>("h00")) @[Monitor.scala 375:18]
    node _T_871 = asUInt(reset) @[Monitor.scala 44:11]
    node _T_872 = or(_T_870, _T_871) @[Monitor.scala 44:11]
    node _T_873 = eq(_T_872, UInt<1>("h00")) @[Monitor.scala 44:11]
    when _T_873 : @[Monitor.scala 44:11]
      printf(clock, UInt<1>(1), "Assertion failed: 'E' channel valid and not TL-C (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
      stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
      skip @[Monitor.scala 44:11]
    node _T_874 = and(io.in.a.ready, io.in.a.valid) @[Decoupled.scala 40:37]
    node _T_875 = asUInt(asSInt(UInt<12>("h0fff"))) @[package.scala 189:70]
    node _T_876 = dshl(_T_875, io.in.a.bits.size) @[package.scala 189:77]
    node _T_877 = bits(_T_876, 11, 0) @[package.scala 189:82]
    node _T_878 = not(_T_877) @[package.scala 189:46]
    node _T_879 = shr(_T_878, 3) @[Edges.scala 221:59]
    node _T_880 = bits(io.in.a.bits.opcode, 2, 2) @[Edges.scala 93:37]
    node _T_881 = eq(_T_880, UInt<1>("h00")) @[Edges.scala 93:28]
    node _T_882 = mux(_T_881, _T_879, UInt<1>("h00")) @[Edges.scala 222:14]
    reg _T_883 : UInt<9>, clock with : (reset => (reset, UInt<9>("h00"))) @[Edges.scala 230:27]
    node _T_884 = sub(_T_883, UInt<1>("h01")) @[Edges.scala 231:28]
    node _T_885 = tail(_T_884, 1) @[Edges.scala 231:28]
    node _T_886 = eq(_T_883, UInt<1>("h00")) @[Edges.scala 232:25]
    node _T_887 = eq(_T_883, UInt<1>("h01")) @[Edges.scala 233:25]
    node _T_888 = eq(_T_882, UInt<1>("h00")) @[Edges.scala 233:47]
    node _T_889 = or(_T_887, _T_888) @[Edges.scala 233:37]
    node _T_890 = and(_T_889, _T_874) @[Edges.scala 234:22]
    node _T_891 = not(_T_885) @[Edges.scala 235:27]
    node _T_892 = and(_T_882, _T_891) @[Edges.scala 235:25]
    when _T_874 : @[Edges.scala 236:17]
      node _T_893 = mux(_T_886, _T_882, _T_885) @[Edges.scala 237:21]
      _T_883 <= _T_893 @[Edges.scala 237:15]
      skip @[Edges.scala 236:17]
    reg _T_894 : UInt, clock @[Monitor.scala 381:22]
    reg _T_895 : UInt, clock @[Monitor.scala 382:22]
    reg _T_896 : UInt, clock @[Monitor.scala 383:22]
    reg _T_897 : UInt, clock @[Monitor.scala 384:22]
    reg _T_898 : UInt, clock @[Monitor.scala 385:22]
    node _T_899 = eq(_T_886, UInt<1>("h00")) @[Monitor.scala 386:22]
    node _T_900 = and(io.in.a.valid, _T_899) @[Monitor.scala 386:19]
    when _T_900 : @[Monitor.scala 386:32]
      node _T_901 = eq(io.in.a.bits.opcode, _T_894) @[Monitor.scala 387:32]
      node _T_902 = asUInt(reset) @[Monitor.scala 44:11]
      node _T_903 = or(_T_901, _T_902) @[Monitor.scala 44:11]
      node _T_904 = eq(_T_903, UInt<1>("h00")) @[Monitor.scala 44:11]
      when _T_904 : @[Monitor.scala 44:11]
        printf(clock, UInt<1>(1), "Assertion failed: 'A' channel opcode changed within multibeat operation (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
        stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
        skip @[Monitor.scala 44:11]
      node _T_905 = eq(io.in.a.bits.param, _T_895) @[Monitor.scala 388:32]
      node _T_906 = asUInt(reset) @[Monitor.scala 44:11]
      node _T_907 = or(_T_905, _T_906) @[Monitor.scala 44:11]
      node _T_908 = eq(_T_907, UInt<1>("h00")) @[Monitor.scala 44:11]
      when _T_908 : @[Monitor.scala 44:11]
        printf(clock, UInt<1>(1), "Assertion failed: 'A' channel param changed within multibeat operation (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
        stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
        skip @[Monitor.scala 44:11]
      node _T_909 = eq(io.in.a.bits.size, _T_896) @[Monitor.scala 389:32]
      node _T_910 = asUInt(reset) @[Monitor.scala 44:11]
      node _T_911 = or(_T_909, _T_910) @[Monitor.scala 44:11]
      node _T_912 = eq(_T_911, UInt<1>("h00")) @[Monitor.scala 44:11]
      when _T_912 : @[Monitor.scala 44:11]
        printf(clock, UInt<1>(1), "Assertion failed: 'A' channel size changed within multibeat operation (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
        stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
        skip @[Monitor.scala 44:11]
      node _T_913 = eq(io.in.a.bits.source, _T_897) @[Monitor.scala 390:32]
      node _T_914 = asUInt(reset) @[Monitor.scala 44:11]
      node _T_915 = or(_T_913, _T_914) @[Monitor.scala 44:11]
      node _T_916 = eq(_T_915, UInt<1>("h00")) @[Monitor.scala 44:11]
      when _T_916 : @[Monitor.scala 44:11]
        printf(clock, UInt<1>(1), "Assertion failed: 'A' channel source changed within multibeat operation (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
        stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
        skip @[Monitor.scala 44:11]
      node _T_917 = eq(io.in.a.bits.address, _T_898) @[Monitor.scala 391:32]
      node _T_918 = asUInt(reset) @[Monitor.scala 44:11]
      node _T_919 = or(_T_917, _T_918) @[Monitor.scala 44:11]
      node _T_920 = eq(_T_919, UInt<1>("h00")) @[Monitor.scala 44:11]
      when _T_920 : @[Monitor.scala 44:11]
        printf(clock, UInt<1>(1), "Assertion failed: 'A' channel address changed with multibeat operation (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
        stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
        skip @[Monitor.scala 44:11]
      skip @[Monitor.scala 386:32]
    node _T_921 = and(io.in.a.ready, io.in.a.valid) @[Decoupled.scala 40:37]
    node _T_922 = and(_T_921, _T_886) @[Monitor.scala 393:20]
    when _T_922 : @[Monitor.scala 393:32]
      _T_894 <= io.in.a.bits.opcode @[Monitor.scala 394:15]
      _T_895 <= io.in.a.bits.param @[Monitor.scala 395:15]
      _T_896 <= io.in.a.bits.size @[Monitor.scala 396:15]
      _T_897 <= io.in.a.bits.source @[Monitor.scala 397:15]
      _T_898 <= io.in.a.bits.address @[Monitor.scala 398:15]
      skip @[Monitor.scala 393:32]
    node _T_923 = and(io.in.d.ready, io.in.d.valid) @[Decoupled.scala 40:37]
    node _T_924 = asUInt(asSInt(UInt<12>("h0fff"))) @[package.scala 189:70]
    node _T_925 = dshl(_T_924, io.in.d.bits.size) @[package.scala 189:77]
    node _T_926 = bits(_T_925, 11, 0) @[package.scala 189:82]
    node _T_927 = not(_T_926) @[package.scala 189:46]
    node _T_928 = shr(_T_927, 3) @[Edges.scala 221:59]
    node _T_929 = bits(io.in.d.bits.opcode, 0, 0) @[Edges.scala 107:36]
    node _T_930 = mux(_T_929, _T_928, UInt<1>("h00")) @[Edges.scala 222:14]
    reg _T_931 : UInt<9>, clock with : (reset => (reset, UInt<9>("h00"))) @[Edges.scala 230:27]
    node _T_932 = sub(_T_931, UInt<1>("h01")) @[Edges.scala 231:28]
    node _T_933 = tail(_T_932, 1) @[Edges.scala 231:28]
    node _T_934 = eq(_T_931, UInt<1>("h00")) @[Edges.scala 232:25]
    node _T_935 = eq(_T_931, UInt<1>("h01")) @[Edges.scala 233:25]
    node _T_936 = eq(_T_930, UInt<1>("h00")) @[Edges.scala 233:47]
    node _T_937 = or(_T_935, _T_936) @[Edges.scala 233:37]
    node _T_938 = and(_T_937, _T_923) @[Edges.scala 234:22]
    node _T_939 = not(_T_933) @[Edges.scala 235:27]
    node _T_940 = and(_T_930, _T_939) @[Edges.scala 235:25]
    when _T_923 : @[Edges.scala 236:17]
      node _T_941 = mux(_T_934, _T_930, _T_933) @[Edges.scala 237:21]
      _T_931 <= _T_941 @[Edges.scala 237:15]
      skip @[Edges.scala 236:17]
    reg _T_942 : UInt, clock @[Monitor.scala 532:22]
    reg _T_943 : UInt, clock @[Monitor.scala 533:22]
    reg _T_944 : UInt, clock @[Monitor.scala 534:22]
    reg _T_945 : UInt, clock @[Monitor.scala 535:22]
    reg _T_946 : UInt, clock @[Monitor.scala 536:22]
    reg _T_947 : UInt<1>, clock @[Monitor.scala 537:22]
    node _T_948 = eq(_T_934, UInt<1>("h00")) @[Monitor.scala 538:22]
    node _T_949 = and(io.in.d.valid, _T_948) @[Monitor.scala 538:19]
    when _T_949 : @[Monitor.scala 538:32]
      node _T_950 = eq(io.in.d.bits.opcode, _T_942) @[Monitor.scala 539:29]
      node _T_951 = asUInt(reset) @[Monitor.scala 51:11]
      node _T_952 = or(_T_950, _T_951) @[Monitor.scala 51:11]
      node _T_953 = eq(_T_952, UInt<1>("h00")) @[Monitor.scala 51:11]
      when _T_953 : @[Monitor.scala 51:11]
        printf(clock, UInt<1>(1), "Assertion failed: 'D' channel opcode changed within multibeat operation (connected at SystemBus.scala:39:55)\n    at Monitor.scala:51 assert(cond, message)\n") @[Monitor.scala 51:11]
        stop(clock, UInt<1>(1), 1) @[Monitor.scala 51:11]
        skip @[Monitor.scala 51:11]
      node _T_954 = eq(io.in.d.bits.param, _T_943) @[Monitor.scala 540:29]
      node _T_955 = asUInt(reset) @[Monitor.scala 51:11]
      node _T_956 = or(_T_954, _T_955) @[Monitor.scala 51:11]
      node _T_957 = eq(_T_956, UInt<1>("h00")) @[Monitor.scala 51:11]
      when _T_957 : @[Monitor.scala 51:11]
        printf(clock, UInt<1>(1), "Assertion failed: 'D' channel param changed within multibeat operation (connected at SystemBus.scala:39:55)\n    at Monitor.scala:51 assert(cond, message)\n") @[Monitor.scala 51:11]
        stop(clock, UInt<1>(1), 1) @[Monitor.scala 51:11]
        skip @[Monitor.scala 51:11]
      node _T_958 = eq(io.in.d.bits.size, _T_944) @[Monitor.scala 541:29]
      node _T_959 = asUInt(reset) @[Monitor.scala 51:11]
      node _T_960 = or(_T_958, _T_959) @[Monitor.scala 51:11]
      node _T_961 = eq(_T_960, UInt<1>("h00")) @[Monitor.scala 51:11]
      when _T_961 : @[Monitor.scala 51:11]
        printf(clock, UInt<1>(1), "Assertion failed: 'D' channel size changed within multibeat operation (connected at SystemBus.scala:39:55)\n    at Monitor.scala:51 assert(cond, message)\n") @[Monitor.scala 51:11]
        stop(clock, UInt<1>(1), 1) @[Monitor.scala 51:11]
        skip @[Monitor.scala 51:11]
      node _T_962 = eq(io.in.d.bits.source, _T_945) @[Monitor.scala 542:29]
      node _T_963 = asUInt(reset) @[Monitor.scala 51:11]
      node _T_964 = or(_T_962, _T_963) @[Monitor.scala 51:11]
      node _T_965 = eq(_T_964, UInt<1>("h00")) @[Monitor.scala 51:11]
      when _T_965 : @[Monitor.scala 51:11]
        printf(clock, UInt<1>(1), "Assertion failed: 'D' channel source changed within multibeat operation (connected at SystemBus.scala:39:55)\n    at Monitor.scala:51 assert(cond, message)\n") @[Monitor.scala 51:11]
        stop(clock, UInt<1>(1), 1) @[Monitor.scala 51:11]
        skip @[Monitor.scala 51:11]
      node _T_966 = eq(io.in.d.bits.sink, _T_946) @[Monitor.scala 543:29]
      node _T_967 = asUInt(reset) @[Monitor.scala 51:11]
      node _T_968 = or(_T_966, _T_967) @[Monitor.scala 51:11]
      node _T_969 = eq(_T_968, UInt<1>("h00")) @[Monitor.scala 51:11]
      when _T_969 : @[Monitor.scala 51:11]
        printf(clock, UInt<1>(1), "Assertion failed: 'D' channel sink changed with multibeat operation (connected at SystemBus.scala:39:55)\n    at Monitor.scala:51 assert(cond, message)\n") @[Monitor.scala 51:11]
        stop(clock, UInt<1>(1), 1) @[Monitor.scala 51:11]
        skip @[Monitor.scala 51:11]
      node _T_970 = eq(io.in.d.bits.denied, _T_947) @[Monitor.scala 544:29]
      node _T_971 = asUInt(reset) @[Monitor.scala 51:11]
      node _T_972 = or(_T_970, _T_971) @[Monitor.scala 51:11]
      node _T_973 = eq(_T_972, UInt<1>("h00")) @[Monitor.scala 51:11]
      when _T_973 : @[Monitor.scala 51:11]
        printf(clock, UInt<1>(1), "Assertion failed: 'D' channel denied changed with multibeat operation (connected at SystemBus.scala:39:55)\n    at Monitor.scala:51 assert(cond, message)\n") @[Monitor.scala 51:11]
        stop(clock, UInt<1>(1), 1) @[Monitor.scala 51:11]
        skip @[Monitor.scala 51:11]
      skip @[Monitor.scala 538:32]
    node _T_974 = and(io.in.d.ready, io.in.d.valid) @[Decoupled.scala 40:37]
    node _T_975 = and(_T_974, _T_934) @[Monitor.scala 546:20]
    when _T_975 : @[Monitor.scala 546:32]
      _T_942 <= io.in.d.bits.opcode @[Monitor.scala 547:15]
      _T_943 <= io.in.d.bits.param @[Monitor.scala 548:15]
      _T_944 <= io.in.d.bits.size @[Monitor.scala 549:15]
      _T_945 <= io.in.d.bits.source @[Monitor.scala 550:15]
      _T_946 <= io.in.d.bits.sink @[Monitor.scala 551:15]
      _T_947 <= io.in.d.bits.denied @[Monitor.scala 552:15]
      skip @[Monitor.scala 546:32]
    reg inflight : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Monitor.scala 608:27]
    reg inflight_opcodes : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[Monitor.scala 610:35]
    reg inflight_sizes : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[Monitor.scala 612:33]
    node _T_976 = and(io.in.a.ready, io.in.a.valid) @[Decoupled.scala 40:37]
    node _T_977 = asUInt(asSInt(UInt<12>("h0fff"))) @[package.scala 189:70]
    node _T_978 = dshl(_T_977, io.in.a.bits.size) @[package.scala 189:77]
    node _T_979 = bits(_T_978, 11, 0) @[package.scala 189:82]
    node _T_980 = not(_T_979) @[package.scala 189:46]
    node _T_981 = shr(_T_980, 3) @[Edges.scala 221:59]
    node _T_982 = bits(io.in.a.bits.opcode, 2, 2) @[Edges.scala 93:37]
    node _T_983 = eq(_T_982, UInt<1>("h00")) @[Edges.scala 93:28]
    node _T_984 = mux(_T_983, _T_981, UInt<1>("h00")) @[Edges.scala 222:14]
    reg _T_985 : UInt<9>, clock with : (reset => (reset, UInt<9>("h00"))) @[Edges.scala 230:27]
    node _T_986 = sub(_T_985, UInt<1>("h01")) @[Edges.scala 231:28]
    node _T_987 = tail(_T_986, 1) @[Edges.scala 231:28]
    node a_first = eq(_T_985, UInt<1>("h00")) @[Edges.scala 232:25]
    node _T_988 = eq(_T_985, UInt<1>("h01")) @[Edges.scala 233:25]
    node _T_989 = eq(_T_984, UInt<1>("h00")) @[Edges.scala 233:47]
    node _T_990 = or(_T_988, _T_989) @[Edges.scala 233:37]
    node _T_991 = and(_T_990, _T_976) @[Edges.scala 234:22]
    node _T_992 = not(_T_987) @[Edges.scala 235:27]
    node _T_993 = and(_T_984, _T_992) @[Edges.scala 235:25]
    when _T_976 : @[Edges.scala 236:17]
      node _T_994 = mux(a_first, _T_984, _T_987) @[Edges.scala 237:21]
      _T_985 <= _T_994 @[Edges.scala 237:15]
      skip @[Edges.scala 236:17]
    node _T_995 = and(io.in.d.ready, io.in.d.valid) @[Decoupled.scala 40:37]
    node _T_996 = asUInt(asSInt(UInt<12>("h0fff"))) @[package.scala 189:70]
    node _T_997 = dshl(_T_996, io.in.d.bits.size) @[package.scala 189:77]
    node _T_998 = bits(_T_997, 11, 0) @[package.scala 189:82]
    node _T_999 = not(_T_998) @[package.scala 189:46]
    node _T_1000 = shr(_T_999, 3) @[Edges.scala 221:59]
    node _T_1001 = bits(io.in.d.bits.opcode, 0, 0) @[Edges.scala 107:36]
    node _T_1002 = mux(_T_1001, _T_1000, UInt<1>("h00")) @[Edges.scala 222:14]
    reg _T_1003 : UInt<9>, clock with : (reset => (reset, UInt<9>("h00"))) @[Edges.scala 230:27]
    node _T_1004 = sub(_T_1003, UInt<1>("h01")) @[Edges.scala 231:28]
    node _T_1005 = tail(_T_1004, 1) @[Edges.scala 231:28]
    node d_first = eq(_T_1003, UInt<1>("h00")) @[Edges.scala 232:25]
    node _T_1006 = eq(_T_1003, UInt<1>("h01")) @[Edges.scala 233:25]
    node _T_1007 = eq(_T_1002, UInt<1>("h00")) @[Edges.scala 233:47]
    node _T_1008 = or(_T_1006, _T_1007) @[Edges.scala 233:37]
    node _T_1009 = and(_T_1008, _T_995) @[Edges.scala 234:22]
    node _T_1010 = not(_T_1005) @[Edges.scala 235:27]
    node _T_1011 = and(_T_1002, _T_1010) @[Edges.scala 235:25]
    when _T_995 : @[Edges.scala 236:17]
      node _T_1012 = mux(d_first, _T_1002, _T_1005) @[Edges.scala 237:21]
      _T_1003 <= _T_1012 @[Edges.scala 237:15]
      skip @[Edges.scala 236:17]
    wire a_set : UInt<1>
    a_set <= UInt<1>("h00")
    wire a_opcodes_set : UInt<4>
    a_opcodes_set <= UInt<4>("h00")
    wire a_sizes_set : UInt<8>
    a_sizes_set <= UInt<8>("h00")
    wire a_opcode_lookup : UInt<4>
    a_opcode_lookup <= UInt<4>("h00")
    node _T_1013 = dshl(io.in.d.bits.source, UInt<2>("h02")) @[Monitor.scala 629:69]
    node _T_1014 = dshr(inflight_opcodes, _T_1013) @[Monitor.scala 629:44]
    node _T_1015 = dshl(UInt<1>("h01"), UInt<2>("h02")) @[Monitor.scala 629:123]
    node _T_1016 = dshl(UInt<1>("h01"), _T_1015) @[Monitor.scala 606:51]
    node _T_1017 = sub(_T_1016, UInt<1>("h01")) @[Monitor.scala 606:57]
    node _T_1018 = tail(_T_1017, 1) @[Monitor.scala 606:57]
    node _T_1019 = and(_T_1014, _T_1018) @[Monitor.scala 629:97]
    node _T_1020 = dshr(_T_1019, UInt<1>("h01")) @[Monitor.scala 629:152]
    a_opcode_lookup <= _T_1020 @[Monitor.scala 629:21]
    wire a_size_lookup : UInt<8>
    a_size_lookup <= UInt<8>("h00")
    node _T_1021 = dshl(io.in.d.bits.source, UInt<2>("h03")) @[Monitor.scala 633:65]
    node _T_1022 = dshr(inflight_sizes, _T_1021) @[Monitor.scala 633:40]
    node _T_1023 = dshl(UInt<1>("h01"), UInt<2>("h03")) @[Monitor.scala 633:117]
    node _T_1024 = dshl(UInt<1>("h01"), _T_1023) @[Monitor.scala 606:51]
    node _T_1025 = sub(_T_1024, UInt<1>("h01")) @[Monitor.scala 606:57]
    node _T_1026 = tail(_T_1025, 1) @[Monitor.scala 606:57]
    node _T_1027 = and(_T_1022, _T_1026) @[Monitor.scala 633:91]
    node _T_1028 = dshr(_T_1027, UInt<1>("h01")) @[Monitor.scala 633:144]
    a_size_lookup <= _T_1028 @[Monitor.scala 633:19]
    wire _T_1029 : UInt<3>[8] @[Monitor.scala 635:42]
    _T_1029[0] <= UInt<1>("h00") @[Monitor.scala 635:42]
    _T_1029[1] <= UInt<1>("h00") @[Monitor.scala 635:42]
    _T_1029[2] <= UInt<1>("h01") @[Monitor.scala 635:42]
    _T_1029[3] <= UInt<1>("h01") @[Monitor.scala 635:42]
    _T_1029[4] <= UInt<1>("h01") @[Monitor.scala 635:42]
    _T_1029[5] <= UInt<2>("h02") @[Monitor.scala 635:42]
    _T_1029[6] <= UInt<3>("h04") @[Monitor.scala 635:42]
    _T_1029[7] <= UInt<3>("h04") @[Monitor.scala 635:42]
    wire _T_1030 : UInt<3>[8] @[Monitor.scala 636:42]
    _T_1030[0] <= UInt<1>("h00") @[Monitor.scala 636:42]
    _T_1030[1] <= UInt<1>("h00") @[Monitor.scala 636:42]
    _T_1030[2] <= UInt<1>("h01") @[Monitor.scala 636:42]
    _T_1030[3] <= UInt<1>("h01") @[Monitor.scala 636:42]
    _T_1030[4] <= UInt<1>("h01") @[Monitor.scala 636:42]
    _T_1030[5] <= UInt<2>("h02") @[Monitor.scala 636:42]
    _T_1030[6] <= UInt<3>("h05") @[Monitor.scala 636:42]
    _T_1030[7] <= UInt<3>("h04") @[Monitor.scala 636:42]
    wire a_opcodes_set_interm : UInt<4>
    a_opcodes_set_interm <= UInt<4>("h00")
    wire a_sizes_set_interm : UInt<5>
    a_sizes_set_interm <= UInt<5>("h00")
    node _T_1031 = and(io.in.a.ready, io.in.a.valid) @[Decoupled.scala 40:37]
    node _T_1032 = and(_T_1031, a_first) @[Monitor.scala 643:27]
    node _T_1033 = and(_T_1032, UInt<1>("h01")) @[Monitor.scala 643:38]
    when _T_1033 : @[Monitor.scala 643:72]
      node _T_1034 = dshl(UInt<1>("h01"), io.in.a.bits.source) @[OneHot.scala 58:35]
      a_set <= _T_1034 @[Monitor.scala 644:13]
      node _T_1035 = dshl(io.in.a.bits.opcode, UInt<1>("h01")) @[Monitor.scala 645:53]
      node _T_1036 = or(_T_1035, UInt<1>("h01")) @[Monitor.scala 645:61]
      a_opcodes_set_interm <= _T_1036 @[Monitor.scala 645:28]
      node _T_1037 = dshl(io.in.a.bits.size, UInt<1>("h01")) @[Monitor.scala 646:49]
      node _T_1038 = or(_T_1037, UInt<1>("h01")) @[Monitor.scala 646:57]
      a_sizes_set_interm <= _T_1038 @[Monitor.scala 646:26]
      node _T_1039 = dshl(io.in.a.bits.source, UInt<2>("h02")) @[Monitor.scala 647:72]
      node _T_1040 = dshl(a_opcodes_set_interm, _T_1039) @[Monitor.scala 647:47]
      a_opcodes_set <= _T_1040 @[Monitor.scala 647:21]
      node _T_1041 = dshl(io.in.a.bits.source, UInt<2>("h03")) @[Monitor.scala 648:68]
      node _T_1042 = dshl(a_sizes_set_interm, _T_1041) @[Monitor.scala 648:43]
      a_sizes_set <= _T_1042 @[Monitor.scala 648:19]
      node _T_1043 = dshr(inflight, io.in.a.bits.source) @[Monitor.scala 649:26]
      node _T_1044 = bits(_T_1043, 0, 0) @[Monitor.scala 649:26]
      node _T_1045 = eq(_T_1044, UInt<1>("h00")) @[Monitor.scala 649:17]
      node _T_1046 = asUInt(reset) @[Monitor.scala 44:11]
      node _T_1047 = or(_T_1045, _T_1046) @[Monitor.scala 44:11]
      node _T_1048 = eq(_T_1047, UInt<1>("h00")) @[Monitor.scala 44:11]
      when _T_1048 : @[Monitor.scala 44:11]
        printf(clock, UInt<1>(1), "Assertion failed: 'A' channel re-used a source ID (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
        stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
        skip @[Monitor.scala 44:11]
      skip @[Monitor.scala 643:72]
    wire d_clr : UInt<1>
    d_clr <= UInt<1>("h00")
    wire d_opcodes_clr : UInt<4>
    d_opcodes_clr <= UInt<4>("h00")
    wire d_sizes_clr : UInt<8>
    d_sizes_clr <= UInt<8>("h00")
    node _T_1049 = eq(io.in.d.bits.opcode, UInt<3>("h06")) @[Monitor.scala 659:46]
    node _T_1050 = and(io.in.d.ready, io.in.d.valid) @[Decoupled.scala 40:37]
    node _T_1051 = and(_T_1050, d_first) @[Monitor.scala 660:27]
    node _T_1052 = and(_T_1051, UInt<1>("h01")) @[Monitor.scala 660:38]
    node _T_1053 = eq(_T_1049, UInt<1>("h00")) @[Monitor.scala 660:75]
    node _T_1054 = and(_T_1052, _T_1053) @[Monitor.scala 660:72]
    when _T_1054 : @[Monitor.scala 660:91]
      node _T_1055 = dshl(UInt<1>("h01"), io.in.d.bits.source) @[OneHot.scala 58:35]
      d_clr <= _T_1055 @[Monitor.scala 661:13]
      node _T_1056 = dshl(UInt<1>("h01"), UInt<2>("h02")) @[Monitor.scala 662:48]
      node _T_1057 = dshl(UInt<1>("h01"), _T_1056) @[Monitor.scala 606:51]
      node _T_1058 = sub(_T_1057, UInt<1>("h01")) @[Monitor.scala 606:57]
      node _T_1059 = tail(_T_1058, 1) @[Monitor.scala 606:57]
      node _T_1060 = dshl(io.in.d.bits.source, UInt<2>("h02")) @[Monitor.scala 662:101]
      node _T_1061 = dshl(_T_1059, _T_1060) @[Monitor.scala 662:76]
      d_opcodes_clr <= _T_1061 @[Monitor.scala 662:21]
      node _T_1062 = dshl(UInt<1>("h01"), UInt<2>("h03")) @[Monitor.scala 663:46]
      node _T_1063 = dshl(UInt<1>("h01"), _T_1062) @[Monitor.scala 606:51]
      node _T_1064 = sub(_T_1063, UInt<1>("h01")) @[Monitor.scala 606:57]
      node _T_1065 = tail(_T_1064, 1) @[Monitor.scala 606:57]
      node _T_1066 = dshl(io.in.d.bits.source, UInt<2>("h03")) @[Monitor.scala 663:97]
      node _T_1067 = dshl(_T_1065, _T_1066) @[Monitor.scala 663:72]
      d_sizes_clr <= _T_1067 @[Monitor.scala 663:19]
      skip @[Monitor.scala 660:91]
    node _T_1068 = and(io.in.d.valid, d_first) @[Monitor.scala 665:26]
    node _T_1069 = and(_T_1068, UInt<1>("h01")) @[Monitor.scala 665:37]
    node _T_1070 = eq(_T_1049, UInt<1>("h00")) @[Monitor.scala 665:74]
    node _T_1071 = and(_T_1069, _T_1070) @[Monitor.scala 665:71]
    when _T_1071 : @[Monitor.scala 665:90]
      node _T_1072 = dshr(inflight, io.in.d.bits.source) @[Monitor.scala 666:25]
      node _T_1073 = bits(_T_1072, 0, 0) @[Monitor.scala 666:25]
      node _T_1074 = eq(io.in.a.bits.source, io.in.d.bits.source) @[Monitor.scala 666:93]
      node _T_1075 = and(io.in.a.valid, _T_1074) @[Monitor.scala 666:68]
      node _T_1076 = eq(io.in.a.bits.size, io.in.d.bits.size) @[Monitor.scala 666:142]
      node _T_1077 = and(_T_1075, _T_1076) @[Monitor.scala 666:119]
      node _T_1078 = and(_T_1077, a_first) @[Monitor.scala 666:166]
      node _T_1079 = or(_T_1073, _T_1078) @[Monitor.scala 666:49]
      node _T_1080 = asUInt(reset) @[Monitor.scala 51:11]
      node _T_1081 = or(_T_1079, _T_1080) @[Monitor.scala 51:11]
      node _T_1082 = eq(_T_1081, UInt<1>("h00")) @[Monitor.scala 51:11]
      when _T_1082 : @[Monitor.scala 51:11]
        printf(clock, UInt<1>(1), "Assertion failed: 'D' channel acknowledged for nothing inflight (connected at SystemBus.scala:39:55)\n    at Monitor.scala:51 assert(cond, message)\n") @[Monitor.scala 51:11]
        stop(clock, UInt<1>(1), 1) @[Monitor.scala 51:11]
        skip @[Monitor.scala 51:11]
      node _T_1083 = bits(a_opcode_lookup, 2, 0)
      node _T_1084 = eq(io.in.d.bits.opcode, _T_1029[_T_1083]) @[Monitor.scala 667:37]
      node _T_1085 = bits(a_opcode_lookup, 2, 0)
      node _T_1086 = eq(io.in.d.bits.opcode, _T_1030[_T_1085]) @[Monitor.scala 667:96]
      node _T_1087 = or(_T_1084, _T_1086) @[Monitor.scala 667:71]
      node _T_1088 = eq(io.in.d.bits.opcode, _T_1029[io.in.a.bits.opcode]) @[Monitor.scala 668:60]
      node _T_1089 = eq(io.in.d.bits.opcode, _T_1030[io.in.a.bits.opcode]) @[Monitor.scala 668:124]
      node _T_1090 = or(_T_1088, _T_1089) @[Monitor.scala 668:99]
      node _T_1091 = and(io.in.a.valid, _T_1090) @[Monitor.scala 668:34]
      node _T_1092 = or(_T_1087, _T_1091) @[Monitor.scala 668:15]
      node _T_1093 = asUInt(reset) @[Monitor.scala 51:11]
      node _T_1094 = or(_T_1092, _T_1093) @[Monitor.scala 51:11]
      node _T_1095 = eq(_T_1094, UInt<1>("h00")) @[Monitor.scala 51:11]
      when _T_1095 : @[Monitor.scala 51:11]
        printf(clock, UInt<1>(1), "Assertion failed: 'D' channel contains improper opcode response (connected at SystemBus.scala:39:55)\n    at Monitor.scala:51 assert(cond, message)\n") @[Monitor.scala 51:11]
        stop(clock, UInt<1>(1), 1) @[Monitor.scala 51:11]
        skip @[Monitor.scala 51:11]
      node _T_1096 = eq(io.in.d.bits.size, a_size_lookup) @[Monitor.scala 670:34]
      node _T_1097 = eq(io.in.a.bits.size, io.in.d.bits.size) @[Monitor.scala 670:95]
      node _T_1098 = and(io.in.a.valid, _T_1097) @[Monitor.scala 670:72]
      node _T_1099 = or(_T_1096, _T_1098) @[Monitor.scala 670:53]
      node _T_1100 = asUInt(reset) @[Monitor.scala 51:11]
      node _T_1101 = or(_T_1099, _T_1100) @[Monitor.scala 51:11]
      node _T_1102 = eq(_T_1101, UInt<1>("h00")) @[Monitor.scala 51:11]
      when _T_1102 : @[Monitor.scala 51:11]
        printf(clock, UInt<1>(1), "Assertion failed: 'D' channel contains improper response size (connected at SystemBus.scala:39:55)\n    at Monitor.scala:51 assert(cond, message)\n") @[Monitor.scala 51:11]
        stop(clock, UInt<1>(1), 1) @[Monitor.scala 51:11]
        skip @[Monitor.scala 51:11]
      skip @[Monitor.scala 665:90]
    node _T_1103 = and(io.in.d.valid, d_first) @[Monitor.scala 672:25]
    node _T_1104 = and(_T_1103, a_first) @[Monitor.scala 672:36]
    node _T_1105 = and(_T_1104, io.in.a.valid) @[Monitor.scala 672:47]
    node _T_1106 = eq(io.in.a.bits.source, io.in.d.bits.source) @[Monitor.scala 672:90]
    node _T_1107 = and(_T_1105, _T_1106) @[Monitor.scala 672:65]
    node _T_1108 = eq(_T_1049, UInt<1>("h00")) @[Monitor.scala 672:119]
    node _T_1109 = and(_T_1107, _T_1108) @[Monitor.scala 672:116]
    when _T_1109 : @[Monitor.scala 672:135]
      node _T_1110 = eq(io.in.d.ready, UInt<1>("h00")) @[Monitor.scala 673:15]
      node _T_1111 = or(_T_1110, io.in.a.ready) @[Monitor.scala 673:32]
      node _T_1112 = asUInt(reset) @[Monitor.scala 51:11]
      node _T_1113 = or(_T_1111, _T_1112) @[Monitor.scala 51:11]
      node _T_1114 = eq(_T_1113, UInt<1>("h00")) @[Monitor.scala 51:11]
      when _T_1114 : @[Monitor.scala 51:11]
        printf(clock, UInt<1>(1), "Assertion failed: ready check\n    at Monitor.scala:51 assert(cond, message)\n") @[Monitor.scala 51:11]
        stop(clock, UInt<1>(1), 1) @[Monitor.scala 51:11]
        skip @[Monitor.scala 51:11]
      skip @[Monitor.scala 672:135]
    node _T_1115 = neq(a_set, d_clr) @[Monitor.scala 677:20]
    node _T_1116 = orr(a_set) @[Monitor.scala 677:40]
    node _T_1117 = eq(_T_1116, UInt<1>("h00")) @[Monitor.scala 677:33]
    node _T_1118 = or(_T_1115, _T_1117) @[Monitor.scala 677:30]
    node _T_1119 = asUInt(reset) @[Monitor.scala 51:11]
    node _T_1120 = or(_T_1118, _T_1119) @[Monitor.scala 51:11]
    node _T_1121 = eq(_T_1120, UInt<1>("h00")) @[Monitor.scala 51:11]
    when _T_1121 : @[Monitor.scala 51:11]
      printf(clock, UInt<1>(1), "Assertion failed: 'A' and 'D' concurrent, despite minlatency 2 (connected at SystemBus.scala:39:55)\n    at Monitor.scala:51 assert(cond, message)\n") @[Monitor.scala 51:11]
      stop(clock, UInt<1>(1), 1) @[Monitor.scala 51:11]
      skip @[Monitor.scala 51:11]
    node _T_1122 = or(inflight, a_set) @[Monitor.scala 680:27]
    node _T_1123 = not(d_clr) @[Monitor.scala 680:38]
    node _T_1124 = and(_T_1122, _T_1123) @[Monitor.scala 680:36]
    inflight <= _T_1124 @[Monitor.scala 680:14]
    node _T_1125 = or(inflight_opcodes, a_opcodes_set) @[Monitor.scala 681:43]
    node _T_1126 = not(d_opcodes_clr) @[Monitor.scala 681:62]
    node _T_1127 = and(_T_1125, _T_1126) @[Monitor.scala 681:60]
    inflight_opcodes <= _T_1127 @[Monitor.scala 681:22]
    node _T_1128 = or(inflight_sizes, a_sizes_set) @[Monitor.scala 682:39]
    node _T_1129 = not(d_sizes_clr) @[Monitor.scala 682:56]
    node _T_1130 = and(_T_1128, _T_1129) @[Monitor.scala 682:54]
    inflight_sizes <= _T_1130 @[Monitor.scala 682:20]
    reg _T_1131 : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Monitor.scala 684:27]
    inst plusarg_reader of plusarg_reader @[PlusArg.scala 44:11]
    plusarg_reader.out is invalid
    node _T_1132 = orr(inflight) @[Monitor.scala 687:26]
    node _T_1133 = eq(_T_1132, UInt<1>("h00")) @[Monitor.scala 687:16]
    node _T_1134 = eq(plusarg_reader.out, UInt<1>("h00")) @[Monitor.scala 687:39]
    node _T_1135 = or(_T_1133, _T_1134) @[Monitor.scala 687:30]
    node _T_1136 = lt(_T_1131, plusarg_reader.out) @[Monitor.scala 687:59]
    node _T_1137 = or(_T_1135, _T_1136) @[Monitor.scala 687:47]
    node _T_1138 = asUInt(reset) @[Monitor.scala 44:11]
    node _T_1139 = or(_T_1137, _T_1138) @[Monitor.scala 44:11]
    node _T_1140 = eq(_T_1139, UInt<1>("h00")) @[Monitor.scala 44:11]
    when _T_1140 : @[Monitor.scala 44:11]
      printf(clock, UInt<1>(1), "Assertion failed: TileLink timeout expired (connected at SystemBus.scala:39:55)\n    at Monitor.scala:44 assert(cond, message)\n") @[Monitor.scala 44:11]
      stop(clock, UInt<1>(1), 1) @[Monitor.scala 44:11]
      skip @[Monitor.scala 44:11]
    node _T_1141 = add(_T_1131, UInt<1>("h01")) @[Monitor.scala 689:26]
    node _T_1142 = tail(_T_1141, 1) @[Monitor.scala 689:26]
    _T_1131 <= _T_1142 @[Monitor.scala 689:14]
    node _T_1143 = and(io.in.a.ready, io.in.a.valid) @[Decoupled.scala 40:37]
    node _T_1144 = and(io.in.d.ready, io.in.d.valid) @[Decoupled.scala 40:37]
    node _T_1145 = or(_T_1143, _T_1144) @[Monitor.scala 690:27]
    when _T_1145 : @[Monitor.scala 690:47]
      _T_1131 <= UInt<1>("h00") @[Monitor.scala 690:58]
      skip @[Monitor.scala 690:47]
